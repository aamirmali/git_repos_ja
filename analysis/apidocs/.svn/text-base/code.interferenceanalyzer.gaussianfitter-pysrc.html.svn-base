<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>code.interferenceanalyzer.gaussianfitter</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="code-module.html">Package&nbsp;code</a> ::
        <a href="code.interferenceanalyzer-module.html">Package&nbsp;interferenceanalyzer</a> ::
        Module&nbsp;gaussianfitter
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="code.interferenceanalyzer.gaussianfitter-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="code.interferenceanalyzer.gaussianfitter-module.html">Module code.interferenceanalyzer.gaussianfitter</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno"> 1</tt>  <tt class="py-line"><tt class="py-comment">#taken from SciPy cookbook, with slight modifications</tt> </tt>
<a name="L2"></a><tt class="py-lineno"> 2</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">numpy</tt> <tt class="py-keyword">as</tt> <tt class="py-name">np</tt> </tt>
<a name="L3"></a><tt class="py-lineno"> 3</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt class="py-name">scipy</tt> <tt class="py-keyword">import</tt> <tt class="py-name">optimize</tt> </tt>
<a name="L4"></a><tt class="py-lineno"> 4</tt>  <tt class="py-line"> </tt>
<a name="gaussian"></a><div id="gaussian-def"><a name="L5"></a><tt class="py-lineno"> 5</tt> <a class="py-toggle" href="#" id="gaussian-toggle" onclick="return toggle('gaussian');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.gaussianfitter-module.html#gaussian">gaussian</a><tt class="py-op">(</tt><tt class="py-param">height</tt><tt class="py-op">,</tt> <tt class="py-param">center_x</tt><tt class="py-op">,</tt> <tt class="py-param">center_y</tt><tt class="py-op">,</tt> <tt class="py-param">width_x</tt><tt class="py-op">,</tt> <tt class="py-param">width_y</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="gaussian-collapsed" style="display:none;" pad="++" indent="++++"></div><div id="gaussian-expanded"><a name="L6"></a><tt class="py-lineno"> 6</tt>  <tt class="py-line">    <tt class="py-docstring">"""Returns a gaussian function with the given parameters"""</tt> </tt>
<a name="L7"></a><tt class="py-lineno"> 7</tt>  <tt class="py-line">    <tt class="py-name">width_x</tt> <tt class="py-op">=</tt> <tt class="py-name">float</tt><tt class="py-op">(</tt><tt class="py-name">width_x</tt><tt class="py-op">)</tt> </tt>
<a name="L8"></a><tt class="py-lineno"> 8</tt>  <tt class="py-line">    <tt class="py-name">width_y</tt> <tt class="py-op">=</tt> <tt class="py-name">float</tt><tt class="py-op">(</tt><tt class="py-name">width_y</tt><tt class="py-op">)</tt> </tt>
<a name="L9"></a><tt class="py-lineno"> 9</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-keyword">lambda</tt> <tt class="py-name">x</tt><tt class="py-op">,</tt><tt class="py-name">y</tt><tt class="py-op">:</tt> <tt class="py-name">height</tt><tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">exp</tt><tt class="py-op">(</tt> </tt>
<a name="L10"></a><tt class="py-lineno">10</tt>  <tt class="py-line">                <tt class="py-op">-</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">center_x</tt><tt class="py-op">-</tt><tt class="py-name">x</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">width_x</tt><tt class="py-op">)</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">+</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">center_y</tt><tt class="py-op">-</tt><tt class="py-name">y</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">width_y</tt><tt class="py-op">)</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-number">2</tt><tt class="py-op">)</tt> </tt>
</div><a name="L11"></a><tt class="py-lineno">11</tt>  <tt class="py-line"> </tt>
<a name="moments"></a><div id="moments-def"><a name="L12"></a><tt class="py-lineno">12</tt> <a class="py-toggle" href="#" id="moments-toggle" onclick="return toggle('moments');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.gaussianfitter-module.html#moments">moments</a><tt class="py-op">(</tt><tt class="py-param">data</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="moments-collapsed" style="display:none;" pad="++" indent="++++"></div><div id="moments-expanded"><a name="L13"></a><tt class="py-lineno">13</tt>  <tt class="py-line">    <tt class="py-docstring">"""Returns (height, x, y, width_x, width_y)</tt> </tt>
<a name="L14"></a><tt class="py-lineno">14</tt>  <tt class="py-line"><tt class="py-docstring">    the gaussian parameters of a 2D distribution by calculating its</tt> </tt>
<a name="L15"></a><tt class="py-lineno">15</tt>  <tt class="py-line"><tt class="py-docstring">    moments """</tt> </tt>
<a name="L16"></a><tt class="py-lineno">16</tt>  <tt class="py-line">    <tt class="py-name">total</tt> <tt class="py-op">=</tt> <tt id="link-0" class="py-name" targets="Variable code.common_mode.common_plotter.CommonPlotter.data=code.common_mode.common_plotter.CommonPlotter-class.html#data,Variable code.common_mode.script.data=code.common_mode.script-module.html#data,Variable code.dipanalyzer.dipanalyzer.DipAnalyzer.data=code.dipanalyzer.dipanalyzer.DipAnalyzer-class.html#data,Variable code.innerproduct.pointwiseproduct.PointwiseProduct.data=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#data,Variable code.outanalyzer.script.data=code.outanalyzer.script-module.html#data,Variable code.powerspectrum.script.data=code.powerspectrum.script-module.html#data,Variable code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data=code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer-class.html#data,Variable code.stepdetector.stepanalyzer.StepAnalyzer.data=code.stepdetector.stepanalyzer.StepAnalyzer-class.html#data"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-0', 'data', 'link-0');">data</a></tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L17"></a><tt class="py-lineno">17</tt>  <tt class="py-line">    <tt class="py-name">X</tt><tt class="py-op">,</tt> <tt class="py-name">Y</tt> <tt class="py-op">=</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">indices</tt><tt class="py-op">(</tt><tt id="link-1" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-1', 'data', 'link-0');">data</a></tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">)</tt> </tt>
<a name="L18"></a><tt class="py-lineno">18</tt>  <tt class="py-line">    <tt class="py-name">x</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">X</tt><tt class="py-op">*</tt><tt id="link-2" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-2', 'data', 'link-0');">data</a></tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">total</tt> </tt>
<a name="L19"></a><tt class="py-lineno">19</tt>  <tt class="py-line">    <tt class="py-name">y</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">Y</tt><tt class="py-op">*</tt><tt id="link-3" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-3', 'data', 'link-0');">data</a></tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">total</tt> </tt>
<a name="L20"></a><tt class="py-lineno">20</tt>  <tt class="py-line">    <tt class="py-name">col</tt> <tt class="py-op">=</tt> <tt id="link-4" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-4', 'data', 'link-0');">data</a></tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">y</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L21"></a><tt class="py-lineno">21</tt>  <tt class="py-line">    <tt class="py-name">width_x</tt> <tt class="py-op">=</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sqrt</tt><tt class="py-op">(</tt><tt class="py-name">abs</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">arange</tt><tt class="py-op">(</tt><tt class="py-name">col</tt><tt class="py-op">.</tt><tt class="py-name">size</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-name">y</tt><tt class="py-op">)</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">*</tt><tt class="py-name">col</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">col</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L22"></a><tt class="py-lineno">22</tt>  <tt class="py-line">    <tt class="py-name">row</tt> <tt class="py-op">=</tt> <tt id="link-5" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-5', 'data', 'link-0');">data</a></tt><tt class="py-op">[</tt><tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">x</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L23"></a><tt class="py-lineno">23</tt>  <tt class="py-line">    <tt class="py-name">width_y</tt> <tt class="py-op">=</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sqrt</tt><tt class="py-op">(</tt><tt class="py-name">abs</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">arange</tt><tt class="py-op">(</tt><tt class="py-name">row</tt><tt class="py-op">.</tt><tt class="py-name">size</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-name">x</tt><tt class="py-op">)</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">*</tt><tt class="py-name">row</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">row</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L24"></a><tt class="py-lineno">24</tt>  <tt class="py-line">    <tt class="py-name">height</tt> <tt class="py-op">=</tt> <tt id="link-6" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-6', 'data', 'link-0');">data</a></tt><tt class="py-op">.</tt><tt class="py-name">max</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L25"></a><tt class="py-lineno">25</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">height</tt><tt class="py-op">,</tt> <tt class="py-name">x</tt><tt class="py-op">,</tt> <tt class="py-name">y</tt><tt class="py-op">,</tt> <tt class="py-name">width_x</tt><tt class="py-op">,</tt> <tt class="py-name">width_y</tt> </tt>
</div><a name="L26"></a><tt class="py-lineno">26</tt>  <tt class="py-line"> </tt>
<a name="fitgaussian"></a><div id="fitgaussian-def"><a name="L27"></a><tt class="py-lineno">27</tt> <a class="py-toggle" href="#" id="fitgaussian-toggle" onclick="return toggle('fitgaussian');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.gaussianfitter-module.html#fitgaussian">fitgaussian</a><tt class="py-op">(</tt><tt class="py-param">data</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="fitgaussian-collapsed" style="display:none;" pad="++" indent="++++"></div><div id="fitgaussian-expanded"><a name="L28"></a><tt class="py-lineno">28</tt>  <tt class="py-line">    <tt class="py-docstring">"""Tries to fit a 2D Gaussian to the 2D array data. On failure, returns</tt> </tt>
<a name="L29"></a><tt class="py-lineno">29</tt>  <tt class="py-line"><tt class="py-docstring">    None.  On success, returns (height, x, y, width_x, width_y, R^2)."""</tt> </tt>
<a name="L30"></a><tt class="py-lineno">30</tt>  <tt class="py-line">    <tt class="py-name">params</tt> <tt class="py-op">=</tt> <tt id="link-7" class="py-name" targets="Function code.interferenceanalyzer.gaussianfitter.moments()=code.interferenceanalyzer.gaussianfitter-module.html#moments"><a title="code.interferenceanalyzer.gaussianfitter.moments" class="py-name" href="#" onclick="return doclink('link-7', 'moments', 'link-7');">moments</a></tt><tt class="py-op">(</tt><tt id="link-8" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-8', 'data', 'link-0');">data</a></tt><tt class="py-op">)</tt> </tt>
<a name="L31"></a><tt class="py-lineno">31</tt>  <tt class="py-line">    <tt class="py-name">errorfunction</tt> <tt class="py-op">=</tt> <tt class="py-keyword">lambda</tt> <tt class="py-name">p</tt><tt class="py-op">:</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">ravel</tt><tt class="py-op">(</tt><tt id="link-9" class="py-name" targets="Function code.interferenceanalyzer.gaussianfitter.gaussian()=code.interferenceanalyzer.gaussianfitter-module.html#gaussian"><a title="code.interferenceanalyzer.gaussianfitter.gaussian" class="py-name" href="#" onclick="return doclink('link-9', 'gaussian', 'link-9');">gaussian</a></tt><tt class="py-op">(</tt><tt class="py-op">*</tt><tt class="py-name">p</tt><tt class="py-op">)</tt><tt class="py-op">(</tt><tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">indices</tt><tt class="py-op">(</tt><tt id="link-10" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-10', 'data', 'link-0');">data</a></tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">-</tt> </tt>
<a name="L32"></a><tt class="py-lineno">32</tt>  <tt class="py-line">                                 <tt id="link-11" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-11', 'data', 'link-0');">data</a></tt><tt class="py-op">)</tt> </tt>
<a name="L33"></a><tt class="py-lineno">33</tt>  <tt class="py-line">    <tt class="py-name">p</tt><tt class="py-op">,</tt><tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">optimize</tt><tt class="py-op">.</tt><tt class="py-name">leastsq</tt><tt class="py-op">(</tt><tt class="py-name">errorfunction</tt><tt class="py-op">,</tt> <tt class="py-name">params</tt><tt class="py-op">)</tt> </tt>
<a name="L34"></a><tt class="py-lineno">34</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">flag</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">1</tt> <tt class="py-keyword">or</tt> <tt class="py-name">flag</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">4</tt><tt class="py-op">:</tt> <tt class="py-keyword">return</tt> <tt class="py-name">None</tt> </tt>
<a name="L35"></a><tt class="py-lineno">35</tt>  <tt class="py-line">    <tt class="py-comment">#calculate R^2</tt> </tt>
<a name="L36"></a><tt class="py-lineno">36</tt>  <tt class="py-line">    <tt class="py-name">err</tt><tt class="py-op">=</tt><tt class="py-name">errorfunction</tt><tt class="py-op">(</tt><tt class="py-name">p</tt><tt class="py-op">)</tt> </tt>
<a name="L37"></a><tt class="py-lineno">37</tt>  <tt class="py-line">    <tt class="py-name">R_squared</tt><tt class="py-op">=</tt><tt class="py-number">1</tt><tt class="py-op">-</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">var</tt><tt class="py-op">(</tt><tt class="py-name">err</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">var</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">ravel</tt><tt class="py-op">(</tt><tt id="link-12" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-12', 'data', 'link-0');">data</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L38"></a><tt class="py-lineno">38</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">p</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">,</tt><tt class="py-name">p</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">,</tt><tt class="py-name">p</tt><tt class="py-op">[</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">,</tt><tt class="py-name">p</tt><tt class="py-op">[</tt><tt class="py-number">3</tt><tt class="py-op">]</tt><tt class="py-op">,</tt><tt class="py-name">p</tt><tt class="py-op">[</tt><tt class="py-number">4</tt><tt class="py-op">]</tt><tt class="py-op">,</tt><tt class="py-name">R_squared</tt><tt class="py-op">)</tt> </tt>
</div><a name="L39"></a><tt class="py-lineno">39</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Sun Nov  6 16:28:35 2011
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
