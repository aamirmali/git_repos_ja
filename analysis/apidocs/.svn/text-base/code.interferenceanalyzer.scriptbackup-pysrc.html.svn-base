<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>code.interferenceanalyzer.scriptbackup</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="code-module.html">Package&nbsp;code</a> ::
        <a href="code.interferenceanalyzer-module.html">Package&nbsp;interferenceanalyzer</a> ::
        Module&nbsp;scriptbackup
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="code.interferenceanalyzer.scriptbackup-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="code.interferenceanalyzer.scriptbackup-module.html">Module code.interferenceanalyzer.scriptbackup</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">  1</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">os</tt> </tt>
<a name="L2"></a><tt class="py-lineno">  2</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">shutil</tt> </tt>
<a name="L3"></a><tt class="py-lineno">  3</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">math</tt> </tt>
<a name="L4"></a><tt class="py-lineno">  4</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">argparse</tt> </tt>
<a name="L5"></a><tt class="py-lineno">  5</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">numpy</tt> <tt class="py-keyword">as</tt> <tt class="py-name">np</tt> </tt>
<a name="L6"></a><tt class="py-lineno">  6</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">matplotlib</tt><tt class="py-op">.</tt><tt class="py-name">pyplot</tt> <tt class="py-keyword">as</tt> <tt class="py-name">plt</tt> </tt>
<a name="L7"></a><tt class="py-lineno">  7</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-0" class="py-name" targets="Module code.interferenceanalyzer.parse_data=code.interferenceanalyzer.parse_data-module.html"><a title="code.interferenceanalyzer.parse_data" class="py-name" href="#" onclick="return doclink('link-0', 'parse_data', 'link-0');">parse_data</a></tt> </tt>
<a name="L8"></a><tt class="py-lineno">  8</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">intanalyzer</tt> </tt>
<a name="L9"></a><tt class="py-lineno">  9</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-1" class="py-name" targets="Package code=code-module.html"><a title="code" class="py-name" href="#" onclick="return doclink('link-1', 'code', 'link-1');">code</a></tt><tt class="py-op">.</tt><tt id="link-2" class="py-name" targets="Package code.common=code.common-module.html"><a title="code.common" class="py-name" href="#" onclick="return doclink('link-2', 'common', 'link-2');">common</a></tt><tt class="py-op">.</tt><tt id="link-3" class="py-name" targets="Module code.common.rectanglesdrawer=code.common.rectanglesdrawer-module.html"><a title="code.common.rectanglesdrawer" class="py-name" href="#" onclick="return doclink('link-3', 'rectanglesdrawer', 'link-3');">rectanglesdrawer</a></tt> <tt class="py-keyword">as</tt> <tt id="link-4" class="py-name" targets="Variable code.ellipsesdrawer.script.drawer=code.ellipsesdrawer.script-module.html#drawer"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-4', 'drawer', 'link-4');">drawer</a></tt> </tt>
<a name="L10"></a><tt class="py-lineno"> 10</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-5" class="py-name"><a title="code" class="py-name" href="#" onclick="return doclink('link-5', 'code', 'link-1');">code</a></tt><tt class="py-op">.</tt><tt id="link-6" class="py-name"><a title="code.common" class="py-name" href="#" onclick="return doclink('link-6', 'common', 'link-2');">common</a></tt> <tt class="py-keyword">import</tt> <tt id="link-7" class="py-name" targets="Module code.common.exceptions=code.common.exceptions-module.html"><a title="code.common.exceptions" class="py-name" href="#" onclick="return doclink('link-7', 'exceptions', 'link-7');">exceptions</a></tt> </tt>
<a name="L11"></a><tt class="py-lineno"> 11</tt>  <tt class="py-line"> </tt>
<a name="L12"></a><tt class="py-lineno"> 12</tt>  <tt class="py-line"> </tt>
<a name="parse_arguments"></a><div id="parse_arguments-def"><a name="L13"></a><tt class="py-lineno"> 13</tt> <a class="py-toggle" href="#" id="parse_arguments-toggle" onclick="return toggle('parse_arguments');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.scriptbackup-module.html#parse_arguments">parse_arguments</a><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="parse_arguments-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="parse_arguments-expanded"><a name="L14"></a><tt class="py-lineno"> 14</tt>  <tt class="py-line">    <tt id="link-8" class="py-name" targets="Variable code.common_mode.script.parser=code.common_mode.script-module.html#parser,Variable code.ellipsesdrawer.script.parser=code.ellipsesdrawer.script-module.html#parser,Variable code.outanalyzer.script.parser=code.outanalyzer.script-module.html#parser,Variable code.powerspectrum.script.parser=code.powerspectrum.script-module.html#parser,Variable code.stepdetector.script.parser=code.stepdetector.script-module.html#parser"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-8', 'parser', 'link-8');">parser</a></tt><tt class="py-op">=</tt><tt class="py-name">argparse</tt><tt class="py-op">.</tt><tt class="py-name">ArgumentParser</tt><tt class="py-op">(</tt> </tt>
<a name="L15"></a><tt class="py-lineno"> 15</tt>  <tt class="py-line">        <tt class="py-name">description</tt> <tt class="py-op">=</tt> <tt class="py-string">'Finds the interference pattern of the sources and '</tt>  </tt>
<a name="L16"></a><tt class="py-lineno"> 16</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'saves it as a picture and a npy file. '</tt>  </tt>
<a name="L17"></a><tt class="py-lineno"> 17</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'By default, it will save the files in a directory '</tt>  </tt>
<a name="L18"></a><tt class="py-lineno"> 18</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'in the same directory as the input_file. '</tt> </tt>
<a name="L19"></a><tt class="py-lineno"> 19</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'To read arguments from the file filepath, use @filepath.'</tt><tt class="py-op">,</tt>  </tt>
<a name="L20"></a><tt class="py-lineno"> 20</tt>  <tt class="py-line">        <tt class="py-name">epilog</tt> <tt class="py-op">=</tt> <tt class="py-string">'All angles are in degrees.'</tt><tt class="py-op">,</tt>  </tt>
<a name="L21"></a><tt class="py-lineno"> 21</tt>  <tt class="py-line">        <tt class="py-name">fromfile_prefix_chars</tt><tt class="py-op">=</tt><tt class="py-string">'@'</tt><tt class="py-op">,</tt> </tt>
<a name="L22"></a><tt class="py-lineno"> 22</tt>  <tt class="py-line">        <tt class="py-name">formatter_class</tt><tt class="py-op">=</tt><tt class="py-name">argparse</tt><tt class="py-op">.</tt><tt class="py-name">ArgumentDefaultsHelpFormatter</tt><tt class="py-op">)</tt> </tt>
<a name="L23"></a><tt class="py-lineno"> 23</tt>  <tt class="py-line">    <tt id="link-9" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-9', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt> </tt>
<a name="L24"></a><tt class="py-lineno"> 24</tt>  <tt class="py-line">        <tt class="py-string">'input_file'</tt><tt class="py-op">,</tt> <tt class="py-name">nargs</tt><tt class="py-op">=</tt><tt class="py-string">'?'</tt><tt class="py-op">,</tt> <tt class="py-name">help</tt><tt class="py-op">=</tt> <tt class="py-string">'the path of the data file'</tt><tt class="py-op">)</tt> </tt>
<a name="L25"></a><tt class="py-lineno"> 25</tt>  <tt class="py-line">    <tt id="link-10" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-10', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt> </tt>
<a name="L26"></a><tt class="py-lineno"> 26</tt>  <tt class="py-line">        <tt class="py-string">'-dsl'</tt><tt class="py-op">,</tt> <tt class="py-string">'--directory_save_location'</tt><tt class="py-op">,</tt> </tt>
<a name="L27"></a><tt class="py-lineno"> 27</tt>  <tt class="py-line">        <tt class="py-name">help</tt> <tt class="py-op">=</tt> <tt class="py-string">'The location to place the save directory. If None, '</tt>  </tt>
<a name="L28"></a><tt class="py-lineno"> 28</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'the save directory will be placed in the same directory '</tt> </tt>
<a name="L29"></a><tt class="py-lineno"> 29</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'as the input_file.'</tt><tt class="py-op">,</tt> </tt>
<a name="L30"></a><tt class="py-lineno"> 30</tt>  <tt class="py-line">        <tt class="py-name">dest</tt> <tt class="py-op">=</tt> <tt class="py-string">'directory_save_location'</tt><tt class="py-op">)</tt> </tt>
<a name="L31"></a><tt class="py-lineno"> 31</tt>  <tt class="py-line">    <tt id="link-11" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-11', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt> </tt>
<a name="L32"></a><tt class="py-lineno"> 32</tt>  <tt class="py-line">        <tt class="py-string">'-sdn'</tt><tt class="py-op">,</tt> <tt class="py-name">default</tt><tt class="py-op">=</tt><tt class="py-string">'stuff'</tt><tt class="py-op">,</tt>  </tt>
<a name="L33"></a><tt class="py-lineno"> 33</tt>  <tt class="py-line">        <tt class="py-name">help</tt> <tt class="py-op">=</tt> <tt class="py-string">'the tag of the directory where the analysis will be saved. '</tt> </tt>
<a name="L34"></a><tt class="py-lineno"> 34</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'This tag will be appended to a generated name to create '</tt> </tt>
<a name="L35"></a><tt class="py-lineno"> 35</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'the name of the save directory.'</tt><tt class="py-op">,</tt>  </tt>
<a name="L36"></a><tt class="py-lineno"> 36</tt>  <tt class="py-line">        <tt class="py-name">dest</tt><tt class="py-op">=</tt><tt class="py-string">'save_directory_name'</tt><tt class="py-op">)</tt>  </tt>
<a name="L37"></a><tt class="py-lineno"> 37</tt>  <tt class="py-line">    <tt id="link-12" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-12', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt> </tt>
<a name="L38"></a><tt class="py-lineno"> 38</tt>  <tt class="py-line">        <tt class="py-string">'-nsd'</tt><tt class="py-op">,</tt> <tt class="py-string">'--new_save_directory'</tt><tt class="py-op">,</tt> <tt class="py-name">action</tt><tt class="py-op">=</tt><tt class="py-string">'store_true'</tt><tt class="py-op">,</tt> <tt class="py-name">default</tt><tt class="py-op">=</tt><tt class="py-name">False</tt><tt class="py-op">,</tt>  </tt>
<a name="L39"></a><tt class="py-lineno"> 39</tt>  <tt class="py-line">        <tt class="py-name">help</tt><tt class="py-op">=</tt><tt class="py-string">'If an old directory with the same name as the save directory '</tt>  </tt>
<a name="L40"></a><tt class="py-lineno"> 40</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'exists ,keep it and create a new directory to keep the new data.'</tt><tt class="py-op">,</tt>  </tt>
<a name="L41"></a><tt class="py-lineno"> 41</tt>  <tt class="py-line">        <tt class="py-name">dest</tt><tt class="py-op">=</tt><tt class="py-string">'new_save_directory'</tt><tt class="py-op">)</tt> </tt>
<a name="L42"></a><tt class="py-lineno"> 42</tt>  <tt class="py-line">    <tt id="link-13" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-13', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt> </tt>
<a name="L43"></a><tt class="py-lineno"> 43</tt>  <tt class="py-line">        <tt class="py-string">'-f'</tt><tt class="py-op">,</tt> <tt class="py-string">'--frequency'</tt><tt class="py-op">,</tt> <tt id="link-14" class="py-name" targets="Variable code.stepdetector.stepanalyzer.Transition.type=code.stepdetector.stepanalyzer.Transition-class.html#type"><a title="code.stepdetector.stepanalyzer.Transition.type" class="py-name" href="#" onclick="return doclink('link-14', 'type', 'link-14');">type</a></tt><tt class="py-op">=</tt><tt class="py-name">float</tt><tt class="py-op">,</tt> <tt class="py-name">required</tt><tt class="py-op">=</tt><tt class="py-name">True</tt><tt class="py-op">,</tt>  </tt>
<a name="L44"></a><tt class="py-lineno"> 44</tt>  <tt class="py-line">        <tt class="py-name">help</tt> <tt class="py-op">=</tt> <tt class="py-string">'the frequency of the wave in Hz.'</tt><tt class="py-op">,</tt> <tt class="py-name">dest</tt><tt class="py-op">=</tt><tt class="py-string">'frequency'</tt><tt class="py-op">)</tt> </tt>
<a name="L45"></a><tt class="py-lineno"> 45</tt>  <tt class="py-line">    <tt id="link-15" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-15', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt> </tt>
<a name="L46"></a><tt class="py-lineno"> 46</tt>  <tt class="py-line">        <tt class="py-string">'-r'</tt><tt class="py-op">,</tt> <tt class="py-string">'--distance'</tt><tt class="py-op">,</tt> <tt id="link-16" class="py-name"><a title="code.stepdetector.stepanalyzer.Transition.type" class="py-name" href="#" onclick="return doclink('link-16', 'type', 'link-14');">type</a></tt><tt class="py-op">=</tt><tt class="py-name">float</tt><tt class="py-op">,</tt> <tt class="py-name">required</tt><tt class="py-op">=</tt><tt class="py-name">True</tt><tt class="py-op">,</tt>  </tt>
<a name="L47"></a><tt class="py-lineno"> 47</tt>  <tt class="py-line">        <tt class="py-name">help</tt> <tt class="py-op">=</tt> <tt class="py-string">'the radial distance from the center of the sources '</tt>  </tt>
<a name="L48"></a><tt class="py-lineno"> 48</tt>  <tt class="py-line">        <tt class="py-op">+</tt> <tt class="py-string">'to plot the interference pattern.'</tt><tt class="py-op">,</tt>  </tt>
<a name="L49"></a><tt class="py-lineno"> 49</tt>  <tt class="py-line">        <tt class="py-name">dest</tt><tt class="py-op">=</tt><tt class="py-string">'distance'</tt><tt class="py-op">)</tt> </tt>
<a name="L50"></a><tt class="py-lineno"> 50</tt>  <tt class="py-line">    <tt id="link-17" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-17', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'-c'</tt><tt class="py-op">,</tt> <tt class="py-string">'--center'</tt><tt class="py-op">,</tt> <tt class="py-name">required</tt><tt class="py-op">=</tt><tt class="py-name">True</tt><tt class="py-op">,</tt> <tt class="py-name">help</tt> <tt class="py-op">=</tt> <tt class="py-string">"specifies the location of the center of the plot relative to the normal of the source disk's center. The input must be in spherical coordinates (theta, phi). Positive theta rotates x-axis towards postive y. Positive phi rotates original y axis towards postive x."</tt><tt class="py-op">,</tt> <tt class="py-name">dest</tt><tt class="py-op">=</tt><tt class="py-string">'center'</tt><tt class="py-op">)</tt> </tt>
<a name="L51"></a><tt class="py-lineno"> 51</tt>  <tt class="py-line">    <tt id="link-18" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-18', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'-s'</tt><tt class="py-op">,</tt> <tt class="py-string">'--size'</tt><tt class="py-op">,</tt> <tt class="py-name">required</tt><tt class="py-op">=</tt><tt class="py-name">True</tt><tt class="py-op">,</tt> <tt class="py-name">help</tt><tt class="py-op">=</tt> <tt class="py-string">'specifies the angular coverage of the plot in (theta, phi) format.'</tt><tt class="py-op">,</tt> <tt class="py-name">dest</tt> <tt class="py-op">=</tt> <tt class="py-string">'size'</tt><tt class="py-op">)</tt> </tt>
<a name="L52"></a><tt class="py-lineno"> 52</tt>  <tt class="py-line">    <tt id="link-19" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-19', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'-res'</tt><tt class="py-op">,</tt> <tt class="py-string">'--resolution'</tt><tt class="py-op">,</tt> <tt class="py-name">default</tt><tt class="py-op">=</tt><tt class="py-number">20</tt><tt class="py-op">,</tt> <tt id="link-20" class="py-name"><a title="code.stepdetector.stepanalyzer.Transition.type" class="py-name" href="#" onclick="return doclink('link-20', 'type', 'link-14');">type</a></tt><tt class="py-op">=</tt><tt class="py-name">float</tt><tt class="py-op">,</tt> <tt class="py-name">help</tt> <tt class="py-op">=</tt> <tt class="py-string">'The resolution of the image in pixels per degree'</tt><tt class="py-op">)</tt> </tt>
<a name="L53"></a><tt class="py-lineno"> 53</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt id="link-21" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-21', 'parser', 'link-8');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">parse_args</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
</div><a name="L54"></a><tt class="py-lineno"> 54</tt>  <tt class="py-line"> </tt>
<a name="L55"></a><tt class="py-lineno"> 55</tt>  <tt class="py-line"> </tt>
<a name="interpret_and_run"></a><div id="interpret_and_run-def"><a name="L56"></a><tt class="py-lineno"> 56</tt> <a class="py-toggle" href="#" id="interpret_and_run-toggle" onclick="return toggle('interpret_and_run');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.scriptbackup-module.html#interpret_and_run">interpret_and_run</a><tt class="py-op">(</tt><tt class="py-param">args</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="interpret_and_run-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="interpret_and_run-expanded"><a name="L57"></a><tt class="py-lineno"> 57</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt id="link-22" class="py-name" targets="Variable code.common_mode.script.args=code.common_mode.script-module.html#args,Variable code.ellipsesdrawer.script.args=code.ellipsesdrawer.script-module.html#args,Variable code.outanalyzer.script.args=code.outanalyzer.script-module.html#args,Variable code.powerspectrum.script.args=code.powerspectrum.script-module.html#args,Variable code.stepdetector.script.args=code.stepdetector.script-module.html#args"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-22', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">input_file</tt><tt class="py-op">==</tt><tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L58"></a><tt class="py-lineno"> 58</tt>  <tt class="py-line">        <tt class="py-keyword">raise</tt> <tt id="link-23" class="py-name"><a title="code.common.exceptions" class="py-name" href="#" onclick="return doclink('link-23', 'exceptions', 'link-7');">exceptions</a></tt><tt class="py-op">.</tt><tt id="link-24" class="py-name" targets="Class code.common.exceptions.StupidityError=code.common.exceptions.StupidityError-class.html"><a title="code.common.exceptions.StupidityError" class="py-name" href="#" onclick="return doclink('link-24', 'StupidityError', 'link-24');">StupidityError</a></tt><tt class="py-op">(</tt><tt class="py-string">'No input_file entered.'</tt><tt class="py-op">)</tt> </tt>
<a name="L59"></a><tt class="py-lineno"> 59</tt>  <tt class="py-line">    <tt class="py-name">unoptimized_size</tt><tt class="py-op">=</tt><tt class="py-name">eval</tt><tt class="py-op">(</tt><tt id="link-25" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-25', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">size</tt><tt class="py-op">)</tt> </tt>
<a name="L60"></a><tt class="py-lineno"> 60</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">unoptimized_size</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">&lt;=</tt><tt class="py-number">0</tt> <tt class="py-keyword">or</tt> <tt class="py-name">unoptimized_size</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">&lt;=</tt><tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L61"></a><tt class="py-lineno"> 61</tt>  <tt class="py-line">        <tt class="py-keyword">raise</tt> <tt id="link-26" class="py-name"><a title="code.common.exceptions" class="py-name" href="#" onclick="return doclink('link-26', 'exceptions', 'link-7');">exceptions</a></tt><tt class="py-op">.</tt><tt id="link-27" class="py-name"><a title="code.common.exceptions.StupidityError" class="py-name" href="#" onclick="return doclink('link-27', 'StupidityError', 'link-24');">StupidityError</a></tt><tt class="py-op">(</tt> </tt>
<a name="L62"></a><tt class="py-lineno"> 62</tt>  <tt class="py-line">            <tt class="py-string">'Currently plotting a picture of nonpositive size. Oh wait...'</tt><tt class="py-op">)</tt> </tt>
<a name="L63"></a><tt class="py-lineno"> 63</tt>  <tt class="py-line">    <tt class="py-name">save_directory_path</tt><tt class="py-op">=</tt><tt id="link-28" class="py-name" targets="Function code.interferenceanalyzer.script.initiate_save_directory()=code.interferenceanalyzer.script-module.html#initiate_save_directory,Function code.interferenceanalyzer.scriptbackup.initiate_save_directory()=code.interferenceanalyzer.scriptbackup-module.html#initiate_save_directory"><a title="code.interferenceanalyzer.script.initiate_save_directory
code.interferenceanalyzer.scriptbackup.initiate_save_directory" class="py-name" href="#" onclick="return doclink('link-28', 'initiate_save_directory', 'link-28');">initiate_save_directory</a></tt><tt class="py-op">(</tt> </tt>
<a name="L64"></a><tt class="py-lineno"> 64</tt>  <tt class="py-line">        <tt id="link-29" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-29', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">input_file</tt><tt class="py-op">,</tt> <tt id="link-30" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-30', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">directory_save_location</tt><tt class="py-op">,</tt>  </tt>
<a name="L65"></a><tt class="py-lineno"> 65</tt>  <tt class="py-line">        <tt id="link-31" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-31', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">save_directory_name</tt><tt class="py-op">,</tt> <tt id="link-32" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-32', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">new_save_directory</tt><tt class="py-op">)</tt> </tt>
<a name="L66"></a><tt class="py-lineno"> 66</tt>  <tt class="py-line">    <tt id="link-33" class="py-name" targets="Variable code.common_mode.common_plotter.CommonPlotter.data=code.common_mode.common_plotter.CommonPlotter-class.html#data,Variable code.common_mode.script.data=code.common_mode.script-module.html#data,Variable code.dipanalyzer.dipanalyzer.DipAnalyzer.data=code.dipanalyzer.dipanalyzer.DipAnalyzer-class.html#data,Variable code.innerproduct.pointwiseproduct.PointwiseProduct.data=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#data,Variable code.outanalyzer.script.data=code.outanalyzer.script-module.html#data,Variable code.powerspectrum.script.data=code.powerspectrum.script-module.html#data,Variable code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data=code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer-class.html#data,Variable code.stepdetector.stepanalyzer.StepAnalyzer.data=code.stepdetector.stepanalyzer.StepAnalyzer-class.html#data"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-33', 'data', 'link-33');">data</a></tt><tt class="py-op">=</tt><tt id="link-34" class="py-name"><a title="code.interferenceanalyzer.parse_data" class="py-name" href="#" onclick="return doclink('link-34', 'parse_data', 'link-0');">parse_data</a></tt><tt class="py-op">.</tt><tt id="link-35" class="py-name" targets="Function code.interferenceanalyzer.parse_data.read_data()=code.interferenceanalyzer.parse_data-module.html#read_data"><a title="code.interferenceanalyzer.parse_data.read_data" class="py-name" href="#" onclick="return doclink('link-35', 'read_data', 'link-35');">read_data</a></tt><tt class="py-op">(</tt><tt id="link-36" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-36', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">input_file</tt><tt class="py-op">)</tt> </tt>
<a name="L67"></a><tt class="py-lineno"> 67</tt>  <tt class="py-line">    <tt class="py-name">center</tt><tt class="py-op">=</tt><tt class="py-name">eval</tt><tt class="py-op">(</tt><tt id="link-37" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-37', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">center</tt><tt class="py-op">)</tt> </tt>
<a name="L68"></a><tt class="py-lineno"> 68</tt>  <tt class="py-line">    <tt class="py-name">speed_of_light</tt> <tt class="py-op">=</tt> <tt class="py-number">299792458</tt> </tt>
<a name="L69"></a><tt class="py-lineno"> 69</tt>  <tt class="py-line">    <tt class="py-name">wavelength</tt> <tt class="py-op">=</tt> <tt class="py-name">speed_of_light</tt><tt class="py-op">/</tt><tt id="link-38" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-38', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt id="link-39" class="py-name" targets="Variable code.ellipsesdrawer.prettythingsdrawer.PrettyThingsDrawer.frequency=code.ellipsesdrawer.prettythingsdrawer.PrettyThingsDrawer-class.html#frequency"><a title="code.ellipsesdrawer.prettythingsdrawer.PrettyThingsDrawer.frequency" class="py-name" href="#" onclick="return doclink('link-39', 'frequency', 'link-39');">frequency</a></tt> </tt>
<a name="L70"></a><tt class="py-lineno"> 70</tt>  <tt class="py-line">    <tt class="py-name">wavenumber</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt><tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">pi</tt><tt class="py-op">/</tt><tt class="py-name">wavelength</tt> </tt>
<a name="L71"></a><tt class="py-lineno"> 71</tt>  <tt class="py-line">    <tt class="py-name">theta_pixels</tt><tt class="py-op">=</tt><tt class="py-name">math</tt><tt class="py-op">.</tt><tt class="py-name">ceil</tt><tt class="py-op">(</tt><tt class="py-name">unoptimized_size</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">*</tt><tt id="link-40" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-40', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">resolution</tt><tt class="py-op">)</tt> </tt>
<a name="L72"></a><tt class="py-lineno"> 72</tt>  <tt class="py-line">    <tt class="py-name">phi_pixels</tt><tt class="py-op">=</tt><tt class="py-name">math</tt><tt class="py-op">.</tt><tt class="py-name">ceil</tt><tt class="py-op">(</tt><tt class="py-name">unoptimized_size</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">*</tt><tt id="link-41" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-41', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">resolution</tt><tt class="py-op">)</tt> </tt>
<a name="L73"></a><tt class="py-lineno"> 73</tt>  <tt class="py-line">    <tt class="py-name">theta_half_width</tt><tt class="py-op">=</tt><tt class="py-name">theta_pixels</tt><tt class="py-op">/</tt><tt class="py-op">(</tt><tt class="py-number">2</tt><tt class="py-op">*</tt><tt id="link-42" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-42', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">resolution</tt><tt class="py-op">)</tt> </tt>
<a name="L74"></a><tt class="py-lineno"> 74</tt>  <tt class="py-line">    <tt class="py-name">phi_half_width</tt><tt class="py-op">=</tt><tt class="py-name">phi_pixels</tt><tt class="py-op">/</tt><tt class="py-op">(</tt><tt class="py-number">2</tt><tt class="py-op">*</tt><tt id="link-43" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-43', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">resolution</tt><tt class="py-op">)</tt> </tt>
<a name="L75"></a><tt class="py-lineno"> 75</tt>  <tt class="py-line">    <tt class="py-name">theta_min</tt> <tt class="py-op">=</tt> <tt class="py-name">center</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">-</tt><tt class="py-name">theta_half_width</tt> </tt>
<a name="L76"></a><tt class="py-lineno"> 76</tt>  <tt class="py-line">    <tt class="py-name">theta_max</tt> <tt class="py-op">=</tt> <tt class="py-name">center</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">+</tt><tt class="py-name">theta_half_width</tt> </tt>
<a name="L77"></a><tt class="py-lineno"> 77</tt>  <tt class="py-line">    <tt class="py-name">phi_min</tt> <tt class="py-op">=</tt> <tt class="py-name">center</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">-</tt><tt class="py-name">phi_half_width</tt> </tt>
<a name="L78"></a><tt class="py-lineno"> 78</tt>  <tt class="py-line">    <tt class="py-name">phi_max</tt> <tt class="py-op">=</tt> <tt class="py-name">center</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">+</tt><tt class="py-name">phi_half_width</tt> </tt>
<a name="L79"></a><tt class="py-lineno"> 79</tt>  <tt class="py-line">    <tt id="link-44" class="py-name" targets="Variable code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.theta_domain=code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter-class.html#theta_domain"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.theta_domain" class="py-name" href="#" onclick="return doclink('link-44', 'theta_domain', 'link-44');">theta_domain</a></tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">linspace</tt><tt class="py-op">(</tt><tt class="py-name">theta_min</tt><tt class="py-op">,</tt> <tt class="py-name">theta_max</tt><tt class="py-op">,</tt> <tt class="py-name">theta_pixels</tt><tt class="py-op">,</tt> <tt class="py-name">endpoint</tt><tt class="py-op">=</tt><tt class="py-name">False</tt><tt class="py-op">)</tt> </tt>
<a name="L80"></a><tt class="py-lineno"> 80</tt>  <tt class="py-line">    <tt id="link-45" class="py-name" targets="Variable code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.phi_domain=code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter-class.html#phi_domain"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.phi_domain" class="py-name" href="#" onclick="return doclink('link-45', 'phi_domain', 'link-45');">phi_domain</a></tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">linspace</tt><tt class="py-op">(</tt><tt class="py-name">phi_min</tt><tt class="py-op">,</tt> <tt class="py-name">phi_max</tt><tt class="py-op">,</tt> <tt class="py-name">phi_pixels</tt><tt class="py-op">,</tt> <tt class="py-name">endpoint</tt><tt class="py-op">=</tt><tt class="py-name">False</tt><tt class="py-op">)</tt> </tt>
<a name="L81"></a><tt class="py-lineno"> 81</tt>  <tt class="py-line">    <tt class="py-name">meshedgrid</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt id="link-46" class="py-name" targets="Function code.common.arrayfunctions.meshgrid()=code.common.arrayfunctions-module.html#meshgrid"><a title="code.common.arrayfunctions.meshgrid" class="py-name" href="#" onclick="return doclink('link-46', 'meshgrid', 'link-46');">meshgrid</a></tt><tt class="py-op">(</tt><tt id="link-47" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.theta_domain" class="py-name" href="#" onclick="return doclink('link-47', 'theta_domain', 'link-44');">theta_domain</a></tt><tt class="py-op">,</tt> <tt id="link-48" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.phi_domain" class="py-name" href="#" onclick="return doclink('link-48', 'phi_domain', 'link-45');">phi_domain</a></tt><tt class="py-op">)</tt> </tt>
<a name="L82"></a><tt class="py-lineno"> 82</tt>  <tt class="py-line">    <tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">radians</tt><tt class="py-op">(</tt> </tt>
<a name="L83"></a><tt class="py-lineno"> 83</tt>  <tt class="py-line">        <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">vstack</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">meshedgrid</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">flat</tt><tt class="py-op">,</tt> <tt class="py-name">meshedgrid</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">flat</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L84"></a><tt class="py-lineno"> 84</tt>  <tt class="py-line">    <tt class="py-name">spherical_coordinate_array</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L85"></a><tt class="py-lineno"> 85</tt>  <tt class="py-line">        <tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L86"></a><tt class="py-lineno"> 86</tt>  <tt class="py-line">    <tt class="py-name">cartesian_coordinate_array</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L87"></a><tt class="py-lineno"> 87</tt>  <tt class="py-line">        <tt id="link-49" class="py-name" targets="Function code.common.coordinatefunctions.get_cartesian_coordinate_array()=code.common.coordinatefunctions-module.html#get_cartesian_coordinate_array,Function code.interferenceanalyzer.scriptbackup.get_cartesian_coordinate_array()=code.interferenceanalyzer.scriptbackup-module.html#get_cartesian_coordinate_array"><a title="code.common.coordinatefunctions.get_cartesian_coordinate_array
code.interferenceanalyzer.scriptbackup.get_cartesian_coordinate_array" class="py-name" href="#" onclick="return doclink('link-49', 'get_cartesian_coordinate_array', 'link-49');">get_cartesian_coordinate_array</a></tt><tt class="py-op">(</tt><tt class="py-name">spherical_coordinate_array</tt><tt class="py-op">,</tt>  </tt>
<a name="L88"></a><tt class="py-lineno"> 88</tt>  <tt class="py-line">                                       <tt id="link-50" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-50', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt id="link-51" class="py-name" targets="Variable code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance=code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter-class.html#distance"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance" class="py-name" href="#" onclick="return doclink('link-51', 'distance', 'link-51');">distance</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L89"></a><tt class="py-lineno"> 89</tt>  <tt class="py-line">    <tt class="py-name">intanalyzer</tt><tt class="py-op">.</tt><tt class="py-name">set_sources</tt><tt class="py-op">(</tt><tt id="link-52" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-52', 'data', 'link-33');">data</a></tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt id="link-53" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-53', 'data', 'link-33');">data</a></tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L90"></a><tt class="py-lineno"> 90</tt>  <tt class="py-line">    <tt class="py-name">interference_amplitudes</tt><tt class="py-op">=</tt><tt class="py-name">intanalyzer</tt><tt class="py-op">.</tt><tt class="py-name">calc</tt><tt class="py-op">(</tt><tt class="py-name">cartesian_coordinate_array</tt><tt class="py-op">,</tt> <tt class="py-name">wavenumber</tt><tt class="py-op">)</tt> </tt>
<a name="L91"></a><tt class="py-lineno"> 91</tt>  <tt class="py-line"><tt class="py-comment">#    interference_magnitudes=np.sqrt(interference_amplitudes[:,0]**2+interference_amplitudes[:,1]**2+interference_amplitudes[:,2]**2)</tt> </tt>
<a name="L92"></a><tt class="py-lineno"> 92</tt>  <tt class="py-line">    <tt class="py-name">interference_magnitudes</tt><tt class="py-op">=</tt><tt class="py-number">10</tt><tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">log10</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">+</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">+</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">)</tt><tt class="py-op">/</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">max</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">+</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">+</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">**</tt><tt class="py-number">2</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L93"></a><tt class="py-lineno"> 93</tt>  <tt class="py-line">    <tt id="link-54" class="py-name" targets="Function code.interferenceanalyzer.scriptbackup.draw_and_save()=code.interferenceanalyzer.scriptbackup-module.html#draw_and_save"><a title="code.interferenceanalyzer.scriptbackup.draw_and_save" class="py-name" href="#" onclick="return doclink('link-54', 'draw_and_save', 'link-54');">draw_and_save</a></tt><tt class="py-op">(</tt> </tt>
<a name="L94"></a><tt class="py-lineno"> 94</tt>  <tt class="py-line">        <tt class="py-name">interference_amplitudes</tt><tt class="py-op">=</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">,</tt>  </tt>
<a name="L95"></a><tt class="py-lineno"> 95</tt>  <tt class="py-line">        <tt class="py-name">interference_magnitudes</tt><tt class="py-op">=</tt><tt class="py-name">interference_magnitudes</tt><tt class="py-op">,</tt> </tt>
<a name="L96"></a><tt class="py-lineno"> 96</tt>  <tt class="py-line">        <tt id="link-55" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.theta_domain" class="py-name" href="#" onclick="return doclink('link-55', 'theta_domain', 'link-44');">theta_domain</a></tt><tt class="py-op">=</tt><tt id="link-56" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.theta_domain" class="py-name" href="#" onclick="return doclink('link-56', 'theta_domain', 'link-44');">theta_domain</a></tt><tt class="py-op">,</tt> <tt id="link-57" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.phi_domain" class="py-name" href="#" onclick="return doclink('link-57', 'phi_domain', 'link-45');">phi_domain</a></tt><tt class="py-op">=</tt><tt id="link-58" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.phi_domain" class="py-name" href="#" onclick="return doclink('link-58', 'phi_domain', 'link-45');">phi_domain</a></tt><tt class="py-op">,</tt>  </tt>
<a name="L97"></a><tt class="py-lineno"> 97</tt>  <tt class="py-line">        <tt class="py-name">theta_pixels</tt><tt class="py-op">=</tt><tt class="py-name">theta_pixels</tt><tt class="py-op">,</tt> <tt class="py-name">phi_pixels</tt><tt class="py-op">=</tt><tt class="py-name">phi_pixels</tt><tt class="py-op">,</tt>  </tt>
<a name="L98"></a><tt class="py-lineno"> 98</tt>  <tt class="py-line">        <tt class="py-name">save_directory_path</tt><tt class="py-op">=</tt><tt class="py-name">save_directory_path</tt><tt class="py-op">)</tt> </tt>
<a name="L99"></a><tt class="py-lineno"> 99</tt>  <tt class="py-line">    <tt id="link-59" class="py-name" targets="Function code.interferenceanalyzer.scriptbackup.save_analysis()=code.interferenceanalyzer.scriptbackup-module.html#save_analysis"><a title="code.interferenceanalyzer.scriptbackup.save_analysis" class="py-name" href="#" onclick="return doclink('link-59', 'save_analysis', 'link-59');">save_analysis</a></tt><tt class="py-op">(</tt><tt class="py-name">spherical_coordinate_array</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">degrees</tt><tt class="py-op">(</tt><tt class="py-name">spherical_coordinate_array</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">interference_amplitudes</tt><tt class="py-op">=</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">,</tt> <tt class="py-name">interference_magnitudes</tt><tt class="py-op">=</tt><tt class="py-name">interference_magnitudes</tt><tt class="py-op">,</tt> <tt id="link-60" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance" class="py-name" href="#" onclick="return doclink('link-60', 'distance', 'link-51');">distance</a></tt><tt class="py-op">=</tt><tt id="link-61" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-61', 'args', 'link-22');">args</a></tt><tt class="py-op">.</tt><tt id="link-62" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance" class="py-name" href="#" onclick="return doclink('link-62', 'distance', 'link-51');">distance</a></tt><tt class="py-op">,</tt> <tt class="py-name">save_directory_path</tt><tt class="py-op">=</tt><tt class="py-name">save_directory_path</tt><tt class="py-op">)</tt> </tt>
</div><a name="L100"></a><tt class="py-lineno">100</tt>  <tt class="py-line"> </tt>
<a name="L101"></a><tt class="py-lineno">101</tt>  <tt class="py-line"> </tt>
<a name="initiate_save_directory"></a><div id="initiate_save_directory-def"><a name="L102"></a><tt class="py-lineno">102</tt> <a class="py-toggle" href="#" id="initiate_save_directory-toggle" onclick="return toggle('initiate_save_directory');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.scriptbackup-module.html#initiate_save_directory">initiate_save_directory</a><tt class="py-op">(</tt><tt class="py-param">input_file</tt><tt class="py-op">,</tt> <tt class="py-param">directory_save_location</tt><tt class="py-op">,</tt>  </tt>
<a name="L103"></a><tt class="py-lineno">103</tt>  <tt class="py-line">                            <tt class="py-param">save_directory_name</tt><tt class="py-op">,</tt> <tt class="py-param">new_save_directory</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="initiate_save_directory-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="initiate_save_directory-expanded"><a name="L104"></a><tt class="py-lineno">104</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">exists</tt><tt class="py-op">(</tt><tt class="py-name">input_file</tt><tt class="py-op">)</tt><tt class="py-op">==</tt><tt class="py-name">False</tt><tt class="py-op">:</tt> </tt>
<a name="L105"></a><tt class="py-lineno">105</tt>  <tt class="py-line">        <tt class="py-keyword">raise</tt> <tt class="py-name">ValueError</tt><tt class="py-op">(</tt><tt class="py-string">'The specified input_file does not exist'</tt><tt class="py-op">)</tt> </tt>
<a name="L106"></a><tt class="py-lineno">106</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">directory_save_location</tt><tt class="py-op">==</tt><tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L107"></a><tt class="py-lineno">107</tt>  <tt class="py-line">        <tt class="py-name">save_directory_prefix</tt><tt class="py-op">=</tt><tt class="py-name">input_file</tt> </tt>
<a name="L108"></a><tt class="py-lineno">108</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L109"></a><tt class="py-lineno">109</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">exists</tt><tt class="py-op">(</tt><tt class="py-name">directory_save_location</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L110"></a><tt class="py-lineno">110</tt>  <tt class="py-line">            <tt class="py-name">save_directory_prefix</tt> <tt class="py-op">=</tt> <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt class="py-name">directory_save_location</tt><tt class="py-op">,</tt> </tt>
<a name="L111"></a><tt class="py-lineno">111</tt>  <tt class="py-line">                                                 <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">split</tt><tt class="py-op">(</tt><tt class="py-name">input_file</tt><tt class="py-op">)</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L112"></a><tt class="py-lineno">112</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L113"></a><tt class="py-lineno">113</tt>  <tt class="py-line">            <tt class="py-keyword">raise</tt> <tt class="py-name">ValueError</tt><tt class="py-op">(</tt><tt class="py-string">'The directory_save_location does not exist'</tt><tt class="py-op">)</tt> </tt>
<a name="L114"></a><tt class="py-lineno">114</tt>  <tt class="py-line">    <tt class="py-name">save_directory_path</tt><tt class="py-op">=</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_prefix</tt> <tt class="py-op">+</tt> <tt class="py-string">'_'</tt> <tt class="py-op">+</tt> <tt class="py-name">save_directory_name</tt><tt class="py-op">)</tt> </tt>
<a name="L115"></a><tt class="py-lineno">115</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">new_save_directory</tt><tt class="py-op">:</tt> </tt>
<a name="L116"></a><tt class="py-lineno">116</tt>  <tt class="py-line">        <tt class="py-name">original_save_directory_path</tt><tt class="py-op">=</tt><tt class="py-name">save_directory_path</tt> </tt>
<a name="L117"></a><tt class="py-lineno">117</tt>  <tt class="py-line">        <tt class="py-name">copy_number</tt><tt class="py-op">=</tt><tt class="py-number">1</tt> </tt>
<a name="L118"></a><tt class="py-lineno">118</tt>  <tt class="py-line">        <tt class="py-keyword">while</tt> <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">exists</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L119"></a><tt class="py-lineno">119</tt>  <tt class="py-line">            <tt class="py-name">copy_number</tt><tt class="py-op">+=</tt><tt class="py-number">1</tt> </tt>
<a name="L120"></a><tt class="py-lineno">120</tt>  <tt class="py-line">            <tt class="py-name">save_directory_path</tt><tt class="py-op">=</tt><tt class="py-op">(</tt><tt class="py-name">original_save_directory_path</tt>  </tt>
<a name="L121"></a><tt class="py-lineno">121</tt>  <tt class="py-line">                                 <tt class="py-op">+</tt> <tt class="py-string">'_copy('</tt> <tt class="py-op">+</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">copy_number</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-string">')'</tt><tt class="py-op">)</tt> </tt>
<a name="L122"></a><tt class="py-lineno">122</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L123"></a><tt class="py-lineno">123</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">exists</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L124"></a><tt class="py-lineno">124</tt>  <tt class="py-line">            <tt class="py-name">shutil</tt><tt class="py-op">.</tt><tt class="py-name">rmtree</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt><tt class="py-op">)</tt> </tt>
<a name="L125"></a><tt class="py-lineno">125</tt>  <tt class="py-line">    <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">mkdir</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt><tt class="py-op">)</tt> </tt>
<a name="L126"></a><tt class="py-lineno">126</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">save_directory_path</tt> </tt>
</div><a name="L127"></a><tt class="py-lineno">127</tt>  <tt class="py-line"> </tt>
<a name="L128"></a><tt class="py-lineno">128</tt>  <tt class="py-line"> </tt>
<a name="get_cartesian_coordinate_array"></a><div id="get_cartesian_coordinate_array-def"><a name="L129"></a><tt class="py-lineno">129</tt> <a class="py-toggle" href="#" id="get_cartesian_coordinate_array-toggle" onclick="return toggle('get_cartesian_coordinate_array');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.scriptbackup-module.html#get_cartesian_coordinate_array">get_cartesian_coordinate_array</a><tt class="py-op">(</tt><tt class="py-param">spherical_coordinate_array</tt><tt class="py-op">,</tt> <tt class="py-param">distance</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="get_cartesian_coordinate_array-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="get_cartesian_coordinate_array-expanded"><a name="L130"></a><tt class="py-lineno">130</tt>  <tt class="py-line">    <tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L131"></a><tt class="py-lineno">131</tt>  <tt class="py-line">        <tt class="py-name">spherical_coordinate_array</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L132"></a><tt class="py-lineno">132</tt>  <tt class="py-line">    <tt class="py-name">transposed_cartesian_coordinate_array</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L133"></a><tt class="py-lineno">133</tt>  <tt class="py-line">        <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">empty</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-number">3</tt><tt class="py-op">,</tt><tt class="py-name">spherical_coordinate_array</tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L134"></a><tt class="py-lineno">134</tt>  <tt class="py-line">    <tt class="py-name">transposed_cartesian_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L135"></a><tt class="py-lineno">135</tt>  <tt class="py-line">        <tt id="link-63" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance" class="py-name" href="#" onclick="return doclink('link-63', 'distance', 'link-51');">distance</a></tt><tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">cos</tt><tt class="py-op">(</tt><tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L136"></a><tt class="py-lineno">136</tt>  <tt class="py-line">        <tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sin</tt><tt class="py-op">(</tt><tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L137"></a><tt class="py-lineno">137</tt>  <tt class="py-line">    <tt class="py-name">transposed_cartesian_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L138"></a><tt class="py-lineno">138</tt>  <tt class="py-line">        <tt id="link-64" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance" class="py-name" href="#" onclick="return doclink('link-64', 'distance', 'link-51');">distance</a></tt><tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sin</tt><tt class="py-op">(</tt><tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L139"></a><tt class="py-lineno">139</tt>  <tt class="py-line">    <tt class="py-name">transposed_cartesian_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L140"></a><tt class="py-lineno">140</tt>  <tt class="py-line">        <tt id="link-65" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance" class="py-name" href="#" onclick="return doclink('link-65', 'distance', 'link-51');">distance</a></tt><tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">cos</tt><tt class="py-op">(</tt><tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L141"></a><tt class="py-lineno">141</tt>  <tt class="py-line">        <tt class="py-op">*</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">cos</tt><tt class="py-op">(</tt><tt class="py-name">transposed_spherical_coordinate_array</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L142"></a><tt class="py-lineno">142</tt>  <tt class="py-line">    <tt class="py-name">cartesian_coordinate_array</tt><tt class="py-op">=</tt><tt class="py-op">(</tt> </tt>
<a name="L143"></a><tt class="py-lineno">143</tt>  <tt class="py-line">        <tt class="py-name">transposed_cartesian_coordinate_array</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L144"></a><tt class="py-lineno">144</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">cartesian_coordinate_array</tt> </tt>
</div><a name="L145"></a><tt class="py-lineno">145</tt>  <tt class="py-line"> </tt>
<a name="L146"></a><tt class="py-lineno">146</tt>  <tt class="py-line"> </tt>
<a name="draw_and_save"></a><div id="draw_and_save-def"><a name="L147"></a><tt class="py-lineno">147</tt> <a class="py-toggle" href="#" id="draw_and_save-toggle" onclick="return toggle('draw_and_save');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.scriptbackup-module.html#draw_and_save">draw_and_save</a><tt class="py-op">(</tt><tt class="py-param">interference_amplitudes</tt><tt class="py-op">,</tt> <tt class="py-param">interference_magnitudes</tt><tt class="py-op">,</tt> </tt>
<a name="L148"></a><tt class="py-lineno">148</tt>  <tt class="py-line">                  <tt class="py-param">theta_domain</tt><tt class="py-op">,</tt> <tt class="py-param">phi_domain</tt><tt class="py-op">,</tt> <tt class="py-param">theta_pixels</tt><tt class="py-op">,</tt> <tt class="py-param">phi_pixels</tt><tt class="py-op">,</tt>  </tt>
<a name="L149"></a><tt class="py-lineno">149</tt>  <tt class="py-line">                  <tt class="py-param">save_directory_path</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="draw_and_save-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="draw_and_save-expanded"><a name="L150"></a><tt class="py-lineno">150</tt>  <tt class="py-line">    <tt class="py-name">xlabel</tt><tt class="py-op">=</tt><tt class="py-string">'theta'</tt> </tt>
<a name="L151"></a><tt class="py-lineno">151</tt>  <tt class="py-line">    <tt class="py-name">ylabel</tt><tt class="py-op">=</tt><tt class="py-string">'phi'</tt> </tt>
<a name="L152"></a><tt class="py-lineno">152</tt>  <tt class="py-line">    <tt class="py-name">colorbar_label</tt><tt class="py-op">=</tt><tt class="py-string">'amplitude'</tt> </tt>
<a name="L153"></a><tt class="py-lineno">153</tt>  <tt class="py-line">    <tt class="py-keyword">def</tt> <tt class="py-def-name">xformat</tt><tt class="py-op">(</tt><tt class="py-param">x</tt><tt class="py-op">,</tt> <tt class="py-param">i</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L154"></a><tt class="py-lineno">154</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt id="link-66" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.theta_domain" class="py-name" href="#" onclick="return doclink('link-66', 'theta_domain', 'link-44');">theta_domain</a></tt><tt class="py-op">[</tt><tt class="py-name">x</tt><tt class="py-op">]</tt> </tt>
</div><a name="L155"></a><tt class="py-lineno">155</tt>  <tt class="py-line">    <tt class="py-keyword">def</tt> <tt class="py-def-name">yformat</tt><tt class="py-op">(</tt><tt class="py-param">x</tt><tt class="py-op">,</tt> <tt class="py-param">i</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L156"></a><tt class="py-lineno">156</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt id="link-67" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.phi_domain" class="py-name" href="#" onclick="return doclink('link-67', 'phi_domain', 'link-45');">phi_domain</a></tt><tt class="py-op">[</tt><tt class="py-name">x</tt><tt class="py-op">]</tt> </tt>
</div><a name="L157"></a><tt class="py-lineno">157</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">theta_pixels</tt><tt class="py-op">&gt;=</tt><tt class="py-number">100</tt><tt class="py-op">:</tt> </tt>
<a name="L158"></a><tt class="py-lineno">158</tt>  <tt class="py-line">        <tt class="py-name">xtick_factor</tt><tt class="py-op">=</tt><tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">theta_pixels</tt><tt class="py-op">/</tt><tt class="py-number">50</tt><tt class="py-op">)</tt><tt class="py-op">*</tt><tt class="py-number">5</tt> </tt>
<a name="L159"></a><tt class="py-lineno">159</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L160"></a><tt class="py-lineno">160</tt>  <tt class="py-line">        <tt class="py-name">xtick_factor</tt><tt class="py-op">=</tt><tt class="py-number">5</tt> </tt>
<a name="L161"></a><tt class="py-lineno">161</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">phi_pixels</tt><tt class="py-op">&gt;=</tt><tt class="py-number">100</tt><tt class="py-op">:</tt> </tt>
<a name="L162"></a><tt class="py-lineno">162</tt>  <tt class="py-line">        <tt class="py-name">ytick_factor</tt><tt class="py-op">=</tt><tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">phi_pixels</tt><tt class="py-op">/</tt><tt class="py-number">50</tt><tt class="py-op">)</tt><tt class="py-op">*</tt><tt class="py-number">5</tt> </tt>
<a name="L163"></a><tt class="py-lineno">163</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L164"></a><tt class="py-lineno">164</tt>  <tt class="py-line">        <tt class="py-name">ytick_factor</tt><tt class="py-op">=</tt><tt class="py-number">5</tt> </tt>
<a name="L165"></a><tt class="py-lineno">165</tt>  <tt class="py-line">    <tt class="py-name">x_amplitudes_title</tt><tt class="py-op">=</tt><tt class="py-string">'x Amplitudes'</tt> </tt>
<a name="L166"></a><tt class="py-lineno">166</tt>  <tt class="py-line">    <tt id="link-68" class="py-name" targets="Variable code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.x_amplitudes=code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter-class.html#x_amplitudes"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.x_amplitudes" class="py-name" href="#" onclick="return doclink('link-68', 'x_amplitudes', 'link-68');">x_amplitudes</a></tt><tt class="py-op">=</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">reshape</tt><tt class="py-op">(</tt><tt class="py-name">phi_pixels</tt><tt class="py-op">,</tt> <tt class="py-name">theta_pixels</tt><tt class="py-op">)</tt> </tt>
<a name="L167"></a><tt class="py-lineno">167</tt>  <tt class="py-line">    <tt id="link-69" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-69', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-70" class="py-name" targets="Function code.common.rectanglesdrawer.draw_image()=code.common.rectanglesdrawer-module.html#draw_image"><a title="code.common.rectanglesdrawer.draw_image" class="py-name" href="#" onclick="return doclink('link-70', 'draw_image', 'link-70');">draw_image</a></tt><tt class="py-op">(</tt><tt id="link-71" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.x_amplitudes" class="py-name" href="#" onclick="return doclink('link-71', 'x_amplitudes', 'link-68');">x_amplitudes</a></tt><tt class="py-op">,</tt> <tt id="link-72" class="py-name" targets="Variable code.ellipsesdrawer.prettythingsdrawer.fig.title=code.ellipsesdrawer.prettythingsdrawer.fig-class.html#title"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.title" class="py-name" href="#" onclick="return doclink('link-72', 'title', 'link-72');">title</a></tt><tt class="py-op">=</tt><tt class="py-name">x_amplitudes_title</tt><tt class="py-op">,</tt> <tt class="py-name">xlabel</tt><tt class="py-op">=</tt><tt class="py-name">xlabel</tt><tt class="py-op">,</tt> <tt class="py-name">ylabel</tt><tt class="py-op">=</tt><tt class="py-name">ylabel</tt><tt class="py-op">,</tt> <tt class="py-name">colorbar_label</tt><tt class="py-op">=</tt><tt class="py-name">colorbar_label</tt><tt class="py-op">)</tt> </tt>
<a name="L168"></a><tt class="py-lineno">168</tt>  <tt class="py-line">    <tt id="link-73" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-73', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-74" class="py-name" targets="Function code.common.rectanglesdrawer.set_ticks()=code.common.rectanglesdrawer-module.html#set_ticks"><a title="code.common.rectanglesdrawer.set_ticks" class="py-name" href="#" onclick="return doclink('link-74', 'set_ticks', 'link-74');">set_ticks</a></tt><tt class="py-op">(</tt><tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">gca</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">xformat</tt><tt class="py-op">,</tt> <tt class="py-name">yformat</tt><tt class="py-op">,</tt> <tt class="py-name">xtick_factor</tt><tt class="py-op">,</tt> <tt class="py-name">ytick_factor</tt><tt class="py-op">)</tt> </tt>
<a name="L169"></a><tt class="py-lineno">169</tt>  <tt class="py-line">    <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">savefig</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt> <tt class="py-op">+</tt> <tt class="py-string">'/x_Amplitudes'</tt><tt class="py-op">)</tt> </tt>
<a name="L170"></a><tt class="py-lineno">170</tt>  <tt class="py-line">    <tt class="py-name">y_amplitudes_title</tt><tt class="py-op">=</tt><tt class="py-string">'y Amplitudes'</tt> </tt>
<a name="L171"></a><tt class="py-lineno">171</tt>  <tt class="py-line">    <tt id="link-75" class="py-name" targets="Variable code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.y_amplitudes=code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter-class.html#y_amplitudes"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.y_amplitudes" class="py-name" href="#" onclick="return doclink('link-75', 'y_amplitudes', 'link-75');">y_amplitudes</a></tt><tt class="py-op">=</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">reshape</tt><tt class="py-op">(</tt><tt class="py-name">phi_pixels</tt><tt class="py-op">,</tt> <tt class="py-name">theta_pixels</tt><tt class="py-op">)</tt> </tt>
<a name="L172"></a><tt class="py-lineno">172</tt>  <tt class="py-line">    <tt id="link-76" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-76', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-77" class="py-name"><a title="code.common.rectanglesdrawer.draw_image" class="py-name" href="#" onclick="return doclink('link-77', 'draw_image', 'link-70');">draw_image</a></tt><tt class="py-op">(</tt><tt id="link-78" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.y_amplitudes" class="py-name" href="#" onclick="return doclink('link-78', 'y_amplitudes', 'link-75');">y_amplitudes</a></tt><tt class="py-op">,</tt> <tt id="link-79" class="py-name"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.title" class="py-name" href="#" onclick="return doclink('link-79', 'title', 'link-72');">title</a></tt><tt class="py-op">=</tt><tt class="py-name">y_amplitudes_title</tt><tt class="py-op">,</tt> <tt class="py-name">xlabel</tt><tt class="py-op">=</tt><tt class="py-name">xlabel</tt><tt class="py-op">,</tt> <tt class="py-name">ylabel</tt><tt class="py-op">=</tt><tt class="py-name">ylabel</tt><tt class="py-op">,</tt> <tt class="py-name">colorbar_label</tt><tt class="py-op">=</tt><tt class="py-name">colorbar_label</tt><tt class="py-op">)</tt> </tt>
<a name="L173"></a><tt class="py-lineno">173</tt>  <tt class="py-line">    <tt id="link-80" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-80', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-81" class="py-name"><a title="code.common.rectanglesdrawer.set_ticks" class="py-name" href="#" onclick="return doclink('link-81', 'set_ticks', 'link-74');">set_ticks</a></tt><tt class="py-op">(</tt><tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">gca</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">xformat</tt><tt class="py-op">,</tt> <tt class="py-name">yformat</tt><tt class="py-op">,</tt> <tt class="py-name">xtick_factor</tt><tt class="py-op">,</tt> <tt class="py-name">ytick_factor</tt><tt class="py-op">)</tt> </tt>
<a name="L174"></a><tt class="py-lineno">174</tt>  <tt class="py-line">    <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">savefig</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt> <tt class="py-op">+</tt> <tt class="py-string">'/y_Amplitudes'</tt><tt class="py-op">)</tt> </tt>
<a name="L175"></a><tt class="py-lineno">175</tt>  <tt class="py-line">    <tt class="py-name">z_amplitudes_title</tt><tt class="py-op">=</tt><tt class="py-string">'z Amplitudes'</tt> </tt>
<a name="L176"></a><tt class="py-lineno">176</tt>  <tt class="py-line">    <tt id="link-82" class="py-name" targets="Variable code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.z_amplitudes=code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter-class.html#z_amplitudes"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.z_amplitudes" class="py-name" href="#" onclick="return doclink('link-82', 'z_amplitudes', 'link-82');">z_amplitudes</a></tt><tt class="py-op">=</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">reshape</tt><tt class="py-op">(</tt><tt class="py-name">phi_pixels</tt><tt class="py-op">,</tt> <tt class="py-name">theta_pixels</tt><tt class="py-op">)</tt> </tt>
<a name="L177"></a><tt class="py-lineno">177</tt>  <tt class="py-line">    <tt id="link-83" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-83', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-84" class="py-name"><a title="code.common.rectanglesdrawer.draw_image" class="py-name" href="#" onclick="return doclink('link-84', 'draw_image', 'link-70');">draw_image</a></tt><tt class="py-op">(</tt><tt id="link-85" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.z_amplitudes" class="py-name" href="#" onclick="return doclink('link-85', 'z_amplitudes', 'link-82');">z_amplitudes</a></tt><tt class="py-op">,</tt> <tt id="link-86" class="py-name"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.title" class="py-name" href="#" onclick="return doclink('link-86', 'title', 'link-72');">title</a></tt><tt class="py-op">=</tt><tt class="py-name">z_amplitudes_title</tt><tt class="py-op">,</tt> <tt class="py-name">xlabel</tt><tt class="py-op">=</tt><tt class="py-name">xlabel</tt><tt class="py-op">,</tt> <tt class="py-name">ylabel</tt><tt class="py-op">=</tt><tt class="py-name">ylabel</tt><tt class="py-op">,</tt> <tt class="py-name">colorbar_label</tt><tt class="py-op">=</tt><tt class="py-name">colorbar_label</tt><tt class="py-op">)</tt> </tt>
<a name="L178"></a><tt class="py-lineno">178</tt>  <tt class="py-line">    <tt id="link-87" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-87', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-88" class="py-name"><a title="code.common.rectanglesdrawer.set_ticks" class="py-name" href="#" onclick="return doclink('link-88', 'set_ticks', 'link-74');">set_ticks</a></tt><tt class="py-op">(</tt><tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">gca</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">xformat</tt><tt class="py-op">,</tt> <tt class="py-name">yformat</tt><tt class="py-op">,</tt> <tt class="py-name">xtick_factor</tt><tt class="py-op">,</tt> <tt class="py-name">ytick_factor</tt><tt class="py-op">)</tt> </tt>
<a name="L179"></a><tt class="py-lineno">179</tt>  <tt class="py-line">    <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">savefig</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt> <tt class="py-op">+</tt> <tt class="py-string">'/z_Amplitudes'</tt><tt class="py-op">)</tt> </tt>
<a name="L180"></a><tt class="py-lineno">180</tt>  <tt class="py-line">    <tt class="py-name">magnitude_title</tt> <tt class="py-op">=</tt> <tt class="py-string">'Absolute Magnitude'</tt> </tt>
<a name="L181"></a><tt class="py-lineno">181</tt>  <tt class="py-line">    <tt class="py-name">shaped_interference_magnitudes</tt><tt class="py-op">=</tt><tt class="py-name">interference_magnitudes</tt><tt class="py-op">.</tt><tt class="py-name">reshape</tt><tt class="py-op">(</tt><tt class="py-name">phi_pixels</tt><tt class="py-op">,</tt> <tt class="py-name">theta_pixels</tt><tt class="py-op">)</tt> </tt>
<a name="L182"></a><tt class="py-lineno">182</tt>  <tt class="py-line">    <tt id="link-89" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-89', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-90" class="py-name"><a title="code.common.rectanglesdrawer.draw_image" class="py-name" href="#" onclick="return doclink('link-90', 'draw_image', 'link-70');">draw_image</a></tt><tt class="py-op">(</tt><tt class="py-name">shaped_interference_magnitudes</tt><tt class="py-op">,</tt> <tt id="link-91" class="py-name"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.title" class="py-name" href="#" onclick="return doclink('link-91', 'title', 'link-72');">title</a></tt><tt class="py-op">=</tt><tt class="py-name">magnitude_title</tt><tt class="py-op">,</tt> <tt class="py-name">xlabel</tt><tt class="py-op">=</tt><tt class="py-name">xlabel</tt><tt class="py-op">,</tt> <tt class="py-name">ylabel</tt><tt class="py-op">=</tt><tt class="py-name">ylabel</tt><tt class="py-op">,</tt> <tt class="py-name">colorbar_label</tt><tt class="py-op">=</tt><tt class="py-name">colorbar_label</tt><tt class="py-op">,</tt> <tt class="py-name">limit</tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">-</tt><tt class="py-number">45</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L183"></a><tt class="py-lineno">183</tt>  <tt class="py-line">    <tt id="link-92" class="py-name"><a title="code.ellipsesdrawer.script.drawer" class="py-name" href="#" onclick="return doclink('link-92', 'drawer', 'link-4');">drawer</a></tt><tt class="py-op">.</tt><tt id="link-93" class="py-name"><a title="code.common.rectanglesdrawer.set_ticks" class="py-name" href="#" onclick="return doclink('link-93', 'set_ticks', 'link-74');">set_ticks</a></tt><tt class="py-op">(</tt><tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">gca</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">xformat</tt><tt class="py-op">,</tt> <tt class="py-name">yformat</tt><tt class="py-op">,</tt> <tt class="py-name">xtick_factor</tt><tt class="py-op">,</tt> <tt class="py-name">ytick_factor</tt><tt class="py-op">)</tt> </tt>
<a name="L184"></a><tt class="py-lineno">184</tt>  <tt class="py-line">    <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">savefig</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt> <tt class="py-op">+</tt> <tt class="py-string">'/Absolute_Magnitude'</tt><tt class="py-op">)</tt> </tt>
</div><a name="L185"></a><tt class="py-lineno">185</tt>  <tt class="py-line"> </tt>
<a name="L186"></a><tt class="py-lineno">186</tt>  <tt class="py-line"> </tt>
<a name="save_analysis"></a><div id="save_analysis-def"><a name="L187"></a><tt class="py-lineno">187</tt> <a class="py-toggle" href="#" id="save_analysis-toggle" onclick="return toggle('save_analysis');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="code.interferenceanalyzer.scriptbackup-module.html#save_analysis">save_analysis</a><tt class="py-op">(</tt><tt class="py-param">spherical_coordinate_array</tt><tt class="py-op">,</tt> <tt class="py-param">interference_amplitudes</tt><tt class="py-op">,</tt> <tt class="py-param">interference_magnitudes</tt><tt class="py-op">,</tt> <tt class="py-param">distance</tt><tt class="py-op">,</tt> <tt class="py-param">save_directory_path</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="save_analysis-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="save_analysis-expanded"><a name="L188"></a><tt class="py-lineno">188</tt>  <tt class="py-line">    <tt class="py-name">analysis_filepath</tt><tt class="py-op">=</tt><tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt class="py-name">save_directory_path</tt><tt class="py-op">,</tt> <tt class="py-string">'analysis_file.txt'</tt><tt class="py-op">)</tt> </tt>
<a name="L189"></a><tt class="py-lineno">189</tt>  <tt class="py-line">    <tt class="py-name">analysis_array</tt> <tt class="py-op">=</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">hstack</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">spherical_coordinate_array</tt><tt class="py-op">,</tt><tt class="py-name">interference_amplitudes</tt><tt class="py-op">,</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">array</tt><tt class="py-op">(</tt><tt class="py-op">[</tt><tt class="py-name">interference_magnitudes</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L190"></a><tt class="py-lineno">190</tt>  <tt class="py-line">    <tt class="py-name">label</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-string">'theta'</tt><tt class="py-op">,</tt><tt class="py-string">'phi'</tt><tt class="py-op">,</tt><tt class="py-string">'x amplitude'</tt><tt class="py-op">,</tt><tt class="py-string">'y amplitude'</tt><tt class="py-op">,</tt><tt class="py-string">'z amplitude'</tt><tt class="py-op">,</tt><tt class="py-string">'magnitude'</tt><tt class="py-op">]</tt> </tt>
<a name="L191"></a><tt class="py-lineno">191</tt>  <tt class="py-line">    <tt class="py-name">label</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">array</tt><tt class="py-op">(</tt><tt class="py-name">label</tt><tt class="py-op">)</tt> </tt>
<a name="L192"></a><tt class="py-lineno">192</tt>  <tt class="py-line">    <tt class="py-keyword">with</tt> <tt class="py-name">open</tt><tt class="py-op">(</tt><tt class="py-name">analysis_filepath</tt><tt class="py-op">,</tt> <tt class="py-string">'w'</tt><tt class="py-op">)</tt> <tt class="py-keyword">as</tt> <tt class="py-name">analysis_file</tt><tt class="py-op">:</tt> </tt>
<a name="L193"></a><tt class="py-lineno">193</tt>  <tt class="py-line">        <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">set_printoptions</tt><tt class="py-op">(</tt><tt id="link-94" class="py-name" targets="Function code.ellipsesdrawer.script.threshold()=code.ellipsesdrawer.script-module.html#threshold"><a title="code.ellipsesdrawer.script.threshold" class="py-name" href="#" onclick="return doclink('link-94', 'threshold', 'link-94');">threshold</a></tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">inf</tt><tt class="py-op">,</tt> <tt class="py-name">linewidth</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">inf</tt><tt class="py-op">)</tt> </tt>
<a name="L194"></a><tt class="py-lineno">194</tt>  <tt class="py-line">        <tt class="py-name">analysis_file</tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'distance: '</tt> <tt class="py-op">+</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt id="link-95" class="py-name"><a title="code.interferenceanalyzer.sphericalinterpreter.SphericalInterpreter.distance" class="py-name" href="#" onclick="return doclink('link-95', 'distance', 'link-51');">distance</a></tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-string">'m\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L195"></a><tt class="py-lineno">195</tt>  <tt class="py-line">        <tt class="py-name">analysis_file</tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">label</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L196"></a><tt class="py-lineno">196</tt>  <tt class="py-line">        <tt class="py-name">analysis_file</tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">analysis_array</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L197"></a><tt class="py-lineno">197</tt>  <tt class="py-line">        <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">set_printoptions</tt><tt class="py-op">(</tt><tt id="link-96" class="py-name"><a title="code.ellipsesdrawer.script.threshold" class="py-name" href="#" onclick="return doclink('link-96', 'threshold', 'link-94');">threshold</a></tt><tt class="py-op">=</tt><tt class="py-number">1000</tt><tt class="py-op">,</tt> <tt class="py-name">linewidth</tt><tt class="py-op">=</tt><tt class="py-number">75</tt><tt class="py-op">)</tt> </tt>
</div><a name="L198"></a><tt class="py-lineno">198</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Tue Nov  1 17:00:41 2011
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
