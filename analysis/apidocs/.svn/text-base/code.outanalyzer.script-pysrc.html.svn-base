<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>code.outanalyzer.script</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="code-module.html">Package&nbsp;code</a> ::
        <a href="code.outanalyzer-module.html">Package&nbsp;outanalyzer</a> ::
        Module&nbsp;script
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="code.outanalyzer.script-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="code.outanalyzer.script-module.html">Module code.outanalyzer.script</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno"> 1</tt>  <tt class="py-line"><tt class="py-docstring">"""This command-line interface takes a .out file and a search string, and</tt> </tt>
<a name="L2"></a><tt class="py-lineno"> 2</tt>  <tt class="py-line"><tt class="py-docstring">for each column, prints out statistics along with drawing a histogram. It also</tt> </tt>
<a name="L3"></a><tt class="py-lineno"> 3</tt>  <tt class="py-line"><tt class="py-docstring">does this for the dataset as a whole."""</tt> </tt>
<a name="L4"></a><tt class="py-lineno"> 4</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">os</tt> </tt>
<a name="L5"></a><tt class="py-lineno"> 5</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">sys</tt> </tt>
<a name="L6"></a><tt class="py-lineno"> 6</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">numpy</tt> <tt class="py-keyword">as</tt> <tt class="py-name">np</tt> </tt>
<a name="L7"></a><tt class="py-lineno"> 7</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">argparse</tt> </tt>
<a name="L8"></a><tt class="py-lineno"> 8</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">matplotlib</tt><tt class="py-op">.</tt><tt class="py-name">pyplot</tt> <tt class="py-keyword">as</tt> <tt class="py-name">plt</tt> </tt>
<a name="L9"></a><tt class="py-lineno"> 9</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-0" class="py-name" targets="Package code=code-module.html"><a title="code" class="py-name" href="#" onclick="return doclink('link-0', 'code', 'link-0');">code</a></tt><tt class="py-op">.</tt><tt id="link-1" class="py-name" targets="Package code.common=code.common-module.html"><a title="code.common" class="py-name" href="#" onclick="return doclink('link-1', 'common', 'link-1');">common</a></tt><tt class="py-op">.</tt><tt id="link-2" class="py-name" targets="Module code.common.filehandler=code.common.filehandler-module.html"><a title="code.common.filehandler" class="py-name" href="#" onclick="return doclink('link-2', 'filehandler', 'link-2');">filehandler</a></tt> <tt class="py-keyword">as</tt> <tt class="py-name">fh</tt> </tt>
<a name="L10"></a><tt class="py-lineno">10</tt>  <tt class="py-line"> </tt>
<a name="L11"></a><tt class="py-lineno">11</tt>  <tt class="py-line"><tt id="link-3" class="py-name" targets="Variable code.common_mode.script.parser=code.common_mode.script-module.html#parser,Variable code.ellipsesdrawer.script.parser=code.ellipsesdrawer.script-module.html#parser,Variable code.outanalyzer.script.parser=code.outanalyzer.script-module.html#parser,Variable code.powerspectrum.script.parser=code.powerspectrum.script-module.html#parser,Variable code.stepdetector.script.parser=code.stepdetector.script-module.html#parser"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-3', 'parser', 'link-3');">parser</a></tt><tt class="py-op">=</tt><tt class="py-name">argparse</tt><tt class="py-op">.</tt><tt class="py-name">ArgumentParser</tt><tt class="py-op">(</tt> </tt>
<a name="L12"></a><tt class="py-lineno">12</tt>  <tt class="py-line">    <tt class="py-name">description</tt><tt class="py-op">=</tt><tt class="py-string">"Analyzes a .out file and, for each column, prints out"</tt>\ </tt>
<a name="L13"></a><tt class="py-lineno">13</tt>  <tt class="py-line">        <tt class="py-string">" statistics along with drawing a histogram. Also does this for the"</tt>\ </tt>
<a name="L14"></a><tt class="py-lineno">14</tt>  <tt class="py-line">        <tt class="py-string">" dataset as a whole."</tt><tt class="py-op">,</tt> </tt>
<a name="L15"></a><tt class="py-lineno">15</tt>  <tt class="py-line">    <tt class="py-name">formatter_class</tt><tt class="py-op">=</tt><tt class="py-name">argparse</tt><tt class="py-op">.</tt><tt class="py-name">ArgumentDefaultsHelpFormatter</tt><tt class="py-op">)</tt> </tt>
<a name="L16"></a><tt class="py-lineno">16</tt>  <tt class="py-line"><tt id="link-4" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-4', 'parser', 'link-3');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'filename'</tt><tt class="py-op">,</tt><tt class="py-name">help</tt><tt class="py-op">=</tt><tt class="py-string">"the .out file to be analyzed"</tt><tt class="py-op">)</tt> </tt>
<a name="L17"></a><tt class="py-lineno">17</tt>  <tt class="py-line"><tt id="link-5" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-5', 'parser', 'link-3');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'search_string'</tt><tt class="py-op">,</tt><tt class="py-name">help</tt><tt class="py-op">=</tt><tt class="py-string">'string used to identify which'</tt>\ </tt>
<a name="L18"></a><tt class="py-lineno">18</tt>  <tt class="py-line">                        <tt class="py-string">' property in the file should be used'</tt><tt class="py-op">)</tt> </tt>
<a name="L19"></a><tt class="py-lineno">19</tt>  <tt class="py-line"><tt id="link-6" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-6', 'parser', 'link-3');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'-s'</tt><tt class="py-op">,</tt><tt class="py-string">'--save'</tt><tt class="py-op">,</tt><tt class="py-name">metavar</tt><tt class="py-op">=</tt><tt class="py-string">'DIRECTORY'</tt><tt class="py-op">,</tt><tt class="py-name">const</tt><tt class="py-op">=</tt><tt class="py-string">'.'</tt><tt class="py-op">,</tt><tt class="py-name">nargs</tt><tt class="py-op">=</tt><tt class="py-string">'?'</tt><tt class="py-op">,</tt> </tt>
<a name="L20"></a><tt class="py-lineno">20</tt>  <tt class="py-line">                    <tt class="py-name">help</tt><tt class="py-op">=</tt><tt class="py-string">"saves all plots and results, instead of plotting"</tt>\ </tt>
<a name="L21"></a><tt class="py-lineno">21</tt>  <tt class="py-line">                        <tt class="py-string">" them and printing them to stdout. If an argument is"</tt>\ </tt>
<a name="L22"></a><tt class="py-lineno">22</tt>  <tt class="py-line">                        <tt class="py-string">" specified, saves to that directory, creating it if"</tt>\ </tt>
<a name="L23"></a><tt class="py-lineno">23</tt>  <tt class="py-line">                        <tt class="py-string">" it doesn't exist. Otherwise, uses the current"</tt>\ </tt>
<a name="L24"></a><tt class="py-lineno">24</tt>  <tt class="py-line">                        <tt class="py-string">" directory. The text results file is called"</tt>\ </tt>
<a name="L25"></a><tt class="py-lineno">25</tt>  <tt class="py-line">                        <tt class="py-string">" stats_results; the histograms are hist_col1.png,"</tt>\ </tt>
<a name="L26"></a><tt class="py-lineno">26</tt>  <tt class="py-line">                        <tt class="py-string">" hist_col2.png, etc."</tt><tt class="py-op">)</tt> </tt>
<a name="L27"></a><tt class="py-lineno">27</tt>  <tt class="py-line"><tt id="link-7" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-7', 'parser', 'link-3');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'-b'</tt><tt class="py-op">,</tt><tt class="py-string">'--bins'</tt><tt class="py-op">,</tt><tt id="link-8" class="py-name" targets="Variable code.stepdetector.stepanalyzer.Transition.type=code.stepdetector.stepanalyzer.Transition-class.html#type"><a title="code.stepdetector.stepanalyzer.Transition.type" class="py-name" href="#" onclick="return doclink('link-8', 'type', 'link-8');">type</a></tt><tt class="py-op">=</tt><tt class="py-name">int</tt><tt class="py-op">,</tt><tt class="py-name">default</tt><tt class="py-op">=</tt><tt class="py-number">10</tt><tt class="py-op">,</tt> </tt>
<a name="L28"></a><tt class="py-lineno">28</tt>  <tt class="py-line">                    <tt class="py-name">help</tt><tt class="py-op">=</tt><tt class="py-string">'the number of bins to use in the histograms.'</tt><tt class="py-op">)</tt> </tt>
<a name="L29"></a><tt class="py-lineno">29</tt>  <tt class="py-line"><tt id="link-9" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-9', 'parser', 'link-3');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'-p'</tt><tt class="py-op">,</tt><tt class="py-string">'--plot'</tt><tt class="py-op">,</tt><tt id="link-10" class="py-name"><a title="code.stepdetector.stepanalyzer.Transition.type" class="py-name" href="#" onclick="return doclink('link-10', 'type', 'link-8');">type</a></tt><tt class="py-op">=</tt><tt class="py-name">int</tt><tt class="py-op">,</tt><tt class="py-name">default</tt><tt class="py-op">=</tt><tt class="py-number">0</tt><tt class="py-op">,</tt> </tt>
<a name="L30"></a><tt class="py-lineno">30</tt>  <tt class="py-line">                    <tt class="py-name">help</tt><tt class="py-op">=</tt><tt class="py-string">'set to 1 to plot histograms'</tt><tt class="py-op">)</tt> </tt>
<a name="L31"></a><tt class="py-lineno">31</tt>  <tt class="py-line"><tt id="link-11" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-11', 'parser', 'link-3');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">add_argument</tt><tt class="py-op">(</tt><tt class="py-string">'--exclude-cols'</tt><tt class="py-op">,</tt><tt id="link-12" class="py-name"><a title="code.stepdetector.stepanalyzer.Transition.type" class="py-name" href="#" onclick="return doclink('link-12', 'type', 'link-8');">type</a></tt><tt class="py-op">=</tt><tt class="py-name">int</tt><tt class="py-op">,</tt><tt class="py-name">nargs</tt><tt class="py-op">=</tt><tt class="py-string">'*'</tt><tt class="py-op">,</tt><tt class="py-name">metavar</tt><tt class="py-op">=</tt><tt class="py-string">'COL'</tt><tt class="py-op">,</tt> </tt>
<a name="L32"></a><tt class="py-lineno">32</tt>  <tt class="py-line">                    <tt class="py-name">help</tt><tt class="py-op">=</tt><tt class="py-string">'The columns to exclude. If no argument is given,'</tt>\ </tt>
<a name="L33"></a><tt class="py-lineno">33</tt>  <tt class="py-line">                        <tt class="py-string">' excludes all columns from 4 to 15 inclusive.'</tt><tt class="py-op">)</tt> </tt>
<a name="L34"></a><tt class="py-lineno">34</tt>  <tt class="py-line"><tt id="link-13" class="py-name" targets="Variable code.common_mode.script.args=code.common_mode.script-module.html#args,Variable code.ellipsesdrawer.script.args=code.ellipsesdrawer.script-module.html#args,Variable code.outanalyzer.script.args=code.outanalyzer.script-module.html#args,Variable code.powerspectrum.script.args=code.powerspectrum.script-module.html#args,Variable code.stepdetector.script.args=code.stepdetector.script-module.html#args"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-13', 'args', 'link-13');">args</a></tt><tt class="py-op">=</tt><tt id="link-14" class="py-name"><a title="code.common_mode.script.parser
code.ellipsesdrawer.script.parser
code.outanalyzer.script.parser
code.powerspectrum.script.parser
code.stepdetector.script.parser" class="py-name" href="#" onclick="return doclink('link-14', 'parser', 'link-3');">parser</a></tt><tt class="py-op">.</tt><tt class="py-name">parse_args</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L35"></a><tt class="py-lineno">35</tt>  <tt class="py-line"> </tt>
<a name="L36"></a><tt class="py-lineno">36</tt>  <tt class="py-line"><tt class="py-comment">#process arguments</tt> </tt>
<a name="L37"></a><tt class="py-lineno">37</tt>  <tt class="py-line"><tt id="link-15" class="py-name" targets="Variable code.common_mode.common_plotter.CommonPlotter.data=code.common_mode.common_plotter.CommonPlotter-class.html#data,Variable code.common_mode.script.data=code.common_mode.script-module.html#data,Variable code.dipanalyzer.dipanalyzer.DipAnalyzer.data=code.dipanalyzer.dipanalyzer.DipAnalyzer-class.html#data,Variable code.innerproduct.pointwiseproduct.PointwiseProduct.data=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#data,Variable code.outanalyzer.script.data=code.outanalyzer.script-module.html#data,Variable code.powerspectrum.script.data=code.powerspectrum.script-module.html#data,Variable code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data=code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer-class.html#data,Variable code.stepdetector.stepanalyzer.StepAnalyzer.data=code.stepdetector.stepanalyzer.StepAnalyzer-class.html#data"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-15', 'data', 'link-15');">data</a></tt><tt class="py-op">=</tt><tt class="py-name">fh</tt><tt class="py-op">.</tt><tt id="link-16" class="py-name" targets="Function code.common.filehandler.IV_data_to_arr()=code.common.filehandler-module.html#IV_data_to_arr"><a title="code.common.filehandler.IV_data_to_arr" class="py-name" href="#" onclick="return doclink('link-16', 'IV_data_to_arr', 'link-16');">IV_data_to_arr</a></tt><tt class="py-op">(</tt><tt id="link-17" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-17', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">filename</tt><tt class="py-op">,</tt><tt id="link-18" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-18', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">search_string</tt><tt class="py-op">)</tt> </tt>
<a name="L38"></a><tt class="py-lineno">38</tt>  <tt class="py-line"><tt class="py-keyword">if</tt> <tt id="link-19" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-19', 'data', 'link-15');">data</a></tt><tt class="py-op">==</tt><tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L39"></a><tt class="py-lineno">39</tt>  <tt class="py-line">    <tt class="py-keyword">print</tt> <tt class="py-string">"Your search_string returned no data!"</tt> </tt>
<a name="L40"></a><tt class="py-lineno">40</tt>  <tt class="py-line">    <tt class="py-name">sys</tt><tt class="py-op">.</tt><tt class="py-name">exit</tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L41"></a><tt class="py-lineno">41</tt>  <tt class="py-line"><tt class="py-keyword">if</tt> <tt id="link-20" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-20', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">save</tt> <tt class="py-op">!=</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L42"></a><tt class="py-lineno">42</tt>  <tt class="py-line">    <tt id="link-21" class="py-name" targets="Variable code.common_mode.script.save_dir=code.common_mode.script-module.html#save_dir,Variable code.outanalyzer.script.save_dir=code.outanalyzer.script-module.html#save_dir"><a title="code.common_mode.script.save_dir
code.outanalyzer.script.save_dir" class="py-name" href="#" onclick="return doclink('link-21', 'save_dir', 'link-21');">save_dir</a></tt><tt class="py-op">=</tt><tt id="link-22" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-22', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">save</tt> </tt>
<a name="L43"></a><tt class="py-lineno">43</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">exists</tt><tt class="py-op">(</tt><tt id="link-23" class="py-name"><a title="code.common_mode.script.save_dir
code.outanalyzer.script.save_dir" class="py-name" href="#" onclick="return doclink('link-23', 'save_dir', 'link-21');">save_dir</a></tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L44"></a><tt class="py-lineno">44</tt>  <tt class="py-line">        <tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">makedirs</tt><tt class="py-op">(</tt><tt id="link-24" class="py-name"><a title="code.common_mode.script.save_dir
code.outanalyzer.script.save_dir" class="py-name" href="#" onclick="return doclink('link-24', 'save_dir', 'link-21');">save_dir</a></tt><tt class="py-op">)</tt> </tt>
<a name="L45"></a><tt class="py-lineno">45</tt>  <tt class="py-line">    <tt id="link-25" class="py-name" targets="Variable code.outanalyzer.script.results_path=code.outanalyzer.script-module.html#results_path"><a title="code.outanalyzer.script.results_path" class="py-name" href="#" onclick="return doclink('link-25', 'results_path', 'link-25');">results_path</a></tt><tt class="py-op">=</tt><tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt id="link-26" class="py-name"><a title="code.common_mode.script.save_dir
code.outanalyzer.script.save_dir" class="py-name" href="#" onclick="return doclink('link-26', 'save_dir', 'link-21');">save_dir</a></tt><tt class="py-op">,</tt><tt class="py-string">'stats_results'</tt><tt class="py-op">)</tt> </tt>
<a name="L46"></a><tt class="py-lineno">46</tt>  <tt class="py-line">    <tt id="link-27" class="py-name" targets="Variable code.outanalyzer.script.f=code.outanalyzer.script-module.html#f,Variable code.powerspectrum.script.f=code.powerspectrum.script-module.html#f"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-27', 'f', 'link-27');">f</a></tt><tt class="py-op">=</tt><tt class="py-name">open</tt><tt class="py-op">(</tt><tt id="link-28" class="py-name"><a title="code.outanalyzer.script.results_path" class="py-name" href="#" onclick="return doclink('link-28', 'results_path', 'link-25');">results_path</a></tt><tt class="py-op">,</tt><tt class="py-string">'w'</tt><tt class="py-op">)</tt> </tt>
<a name="L47"></a><tt class="py-lineno">47</tt>  <tt class="py-line"><tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L48"></a><tt class="py-lineno">48</tt>  <tt class="py-line">    <tt class="py-comment">#print to standard out by default</tt> </tt>
<a name="L49"></a><tt class="py-lineno">49</tt>  <tt class="py-line">    <tt id="link-29" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-29', 'f', 'link-27');">f</a></tt><tt class="py-op">=</tt><tt class="py-name">sys</tt><tt class="py-op">.</tt><tt class="py-name">stdout</tt> </tt>
<a name="L50"></a><tt class="py-lineno">50</tt>  <tt class="py-line"><tt id="link-30" class="py-name" targets="Variable code.outanalyzer.script.bad_cols=code.outanalyzer.script-module.html#bad_cols,Variable code.powerspectrum.script.bad_cols=code.powerspectrum.script-module.html#bad_cols"><a title="code.outanalyzer.script.bad_cols
code.powerspectrum.script.bad_cols" class="py-name" href="#" onclick="return doclink('link-30', 'bad_cols', 'link-30');">bad_cols</a></tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L51"></a><tt class="py-lineno">51</tt>  <tt class="py-line"><tt class="py-keyword">if</tt> <tt id="link-31" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-31', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">exclude_cols</tt> <tt class="py-op">!=</tt> <tt class="py-name">None</tt> <tt class="py-keyword">and</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt id="link-32" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-32', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">exclude_cols</tt><tt class="py-op">)</tt><tt class="py-op">==</tt><tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L52"></a><tt class="py-lineno">52</tt>  <tt class="py-line">    <tt class="py-comment">#user specified --exclude-cols without any arguments</tt> </tt>
<a name="L53"></a><tt class="py-lineno">53</tt>  <tt class="py-line">    <tt id="link-33" class="py-name"><a title="code.outanalyzer.script.bad_cols
code.powerspectrum.script.bad_cols" class="py-name" href="#" onclick="return doclink('link-33', 'bad_cols', 'link-30');">bad_cols</a></tt><tt class="py-op">=</tt><tt class="py-name">range</tt><tt class="py-op">(</tt><tt class="py-number">4</tt><tt class="py-op">,</tt><tt class="py-number">16</tt><tt class="py-op">)</tt> </tt>
<a name="L54"></a><tt class="py-lineno">54</tt>  <tt class="py-line"><tt class="py-keyword">elif</tt> <tt id="link-34" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-34', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">exclude_cols</tt> <tt class="py-op">!=</tt> <tt class="py-name">None</tt> <tt class="py-keyword">and</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt id="link-35" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-35', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">exclude_cols</tt><tt class="py-op">)</tt><tt class="py-op">&gt;</tt><tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L55"></a><tt class="py-lineno">55</tt>  <tt class="py-line">    <tt id="link-36" class="py-name"><a title="code.outanalyzer.script.bad_cols
code.powerspectrum.script.bad_cols" class="py-name" href="#" onclick="return doclink('link-36', 'bad_cols', 'link-30');">bad_cols</a></tt><tt class="py-op">=</tt><tt id="link-37" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-37', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">exclude_cols</tt> </tt>
<a name="L56"></a><tt class="py-lineno">56</tt>  <tt class="py-line"> </tt>
<a name="L57"></a><tt class="py-lineno">57</tt>  <tt class="py-line"><tt class="py-comment">#start printout</tt> </tt>
<a name="L58"></a><tt class="py-lineno">58</tt>  <tt class="py-line"><tt id="link-38" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-38', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt id="link-39" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-39', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">search_string</tt><tt class="py-op">+</tt><tt class="py-string">" for "</tt><tt class="py-op">+</tt><tt id="link-40" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-40', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">filename</tt><tt class="py-op">+</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L59"></a><tt class="py-lineno">59</tt>  <tt class="py-line"><tt class="py-comment">#first, print out summary of all data</tt> </tt>
<a name="L60"></a><tt class="py-lineno">60</tt>  <tt class="py-line"><tt id="link-41" class="py-name" targets="Variable code.outanalyzer.script.all_data=code.outanalyzer.script-module.html#all_data"><a title="code.outanalyzer.script.all_data" class="py-name" href="#" onclick="return doclink('link-41', 'all_data', 'link-41');">all_data</a></tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L61"></a><tt class="py-lineno">61</tt>  <tt class="py-line"><tt class="py-keyword">for</tt> <tt class="py-name">row</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt id="link-42" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-42', 'data', 'link-15');">data</a></tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L62"></a><tt class="py-lineno">62</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt class="py-name">col</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt id="link-43" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-43', 'data', 'link-15');">data</a></tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L63"></a><tt class="py-lineno">63</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">col</tt> <tt class="py-keyword">not</tt> <tt class="py-keyword">in</tt> <tt id="link-44" class="py-name"><a title="code.outanalyzer.script.bad_cols
code.powerspectrum.script.bad_cols" class="py-name" href="#" onclick="return doclink('link-44', 'bad_cols', 'link-30');">bad_cols</a></tt><tt class="py-op">:</tt> </tt>
<a name="L64"></a><tt class="py-lineno">64</tt>  <tt class="py-line">            <tt id="link-45" class="py-name"><a title="code.outanalyzer.script.all_data" class="py-name" href="#" onclick="return doclink('link-45', 'all_data', 'link-41');">all_data</a></tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt id="link-46" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-46', 'data', 'link-15');">data</a></tt><tt class="py-op">[</tt><tt class="py-name">row</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">col</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L65"></a><tt class="py-lineno">65</tt>  <tt class="py-line"><tt id="link-47" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-47', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'Mean for all data: '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">mean</tt><tt class="py-op">(</tt><tt id="link-48" class="py-name"><a title="code.outanalyzer.script.all_data" class="py-name" href="#" onclick="return doclink('link-48', 'all_data', 'link-41');">all_data</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L66"></a><tt class="py-lineno">66</tt>  <tt class="py-line"><tt id="link-49" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-49', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'STD for all data: '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">std</tt><tt class="py-op">(</tt><tt id="link-50" class="py-name"><a title="code.outanalyzer.script.all_data" class="py-name" href="#" onclick="return doclink('link-50', 'all_data', 'link-41');">all_data</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L67"></a><tt class="py-lineno">67</tt>  <tt class="py-line"><tt id="link-51" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-51', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'Median for all data: '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">median</tt><tt class="py-op">(</tt><tt id="link-52" class="py-name"><a title="code.outanalyzer.script.all_data" class="py-name" href="#" onclick="return doclink('link-52', 'all_data', 'link-41');">all_data</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L68"></a><tt class="py-lineno">68</tt>  <tt class="py-line"><tt class="py-keyword">if</tt> <tt id="link-53" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-53', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">plot</tt><tt class="py-op">==</tt><tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L69"></a><tt class="py-lineno">69</tt>  <tt class="py-line">    <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">hist</tt><tt class="py-op">(</tt><tt id="link-54" class="py-name"><a title="code.outanalyzer.script.all_data" class="py-name" href="#" onclick="return doclink('link-54', 'all_data', 'link-41');">all_data</a></tt><tt class="py-op">,</tt><tt class="py-name">bins</tt><tt class="py-op">=</tt><tt id="link-55" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-55', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">bins</tt><tt class="py-op">)</tt> </tt>
<a name="L70"></a><tt class="py-lineno">70</tt>  <tt class="py-line">    <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt id="link-56" class="py-name" targets="Variable code.ellipsesdrawer.prettythingsdrawer.fig.title=code.ellipsesdrawer.prettythingsdrawer.fig-class.html#title"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.title" class="py-name" href="#" onclick="return doclink('link-56', 'title', 'link-56');">title</a></tt><tt class="py-op">(</tt><tt id="link-57" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-57', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">search_string</tt><tt class="py-op">+</tt><tt class="py-string">' for all data'</tt><tt class="py-op">)</tt> </tt>
<a name="L71"></a><tt class="py-lineno">71</tt>  <tt class="py-line"><tt class="py-keyword">for</tt> <tt class="py-name">col</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt id="link-58" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-58', 'data', 'link-15');">data</a></tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L72"></a><tt class="py-lineno">72</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">col</tt> <tt class="py-keyword">in</tt> <tt id="link-59" class="py-name"><a title="code.outanalyzer.script.bad_cols
code.powerspectrum.script.bad_cols" class="py-name" href="#" onclick="return doclink('link-59', 'bad_cols', 'link-30');">bad_cols</a></tt><tt class="py-op">:</tt> </tt>
<a name="L73"></a><tt class="py-lineno">73</tt>  <tt class="py-line">        <tt class="py-keyword">continue</tt> </tt>
<a name="L74"></a><tt class="py-lineno">74</tt>  <tt class="py-line">    <tt class="py-name">col_data</tt><tt class="py-op">=</tt><tt id="link-60" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-60', 'data', 'link-15');">data</a></tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">,</tt><tt class="py-name">col</tt><tt class="py-op">]</tt> </tt>
<a name="L75"></a><tt class="py-lineno">75</tt>  <tt class="py-line">    <tt id="link-61" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-61', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'Col '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">col</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">' mean: '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">mean</tt><tt class="py-op">(</tt><tt class="py-name">col_data</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L76"></a><tt class="py-lineno">76</tt>  <tt class="py-line">    <tt id="link-62" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-62', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'Col '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">col</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">' std: '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">std</tt><tt class="py-op">(</tt><tt class="py-name">col_data</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L77"></a><tt class="py-lineno">77</tt>  <tt class="py-line">    <tt id="link-63" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-63', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'Col '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">col</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">' median: '</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">median</tt><tt class="py-op">(</tt><tt class="py-name">col_data</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">+</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L78"></a><tt class="py-lineno">78</tt>  <tt class="py-line">    <tt id="link-64" class="py-name"><a title="code.outanalyzer.script.f
code.powerspectrum.script.f" class="py-name" href="#" onclick="return doclink('link-64', 'f', 'link-27');">f</a></tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt class="py-string">'\n'</tt><tt class="py-op">)</tt> </tt>
<a name="L79"></a><tt class="py-lineno">79</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt id="link-65" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-65', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">plot</tt><tt class="py-op">==</tt><tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L80"></a><tt class="py-lineno">80</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt id="link-66" class="py-name" targets="Variable code.ellipsesdrawer.prettythingsdrawer.fig.figure=code.ellipsesdrawer.prettythingsdrawer.fig-class.html#figure"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.figure" class="py-name" href="#" onclick="return doclink('link-66', 'figure', 'link-66');">figure</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L81"></a><tt class="py-lineno">81</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">hist</tt><tt class="py-op">(</tt><tt class="py-name">col_data</tt><tt class="py-op">,</tt><tt class="py-name">bins</tt><tt class="py-op">=</tt><tt id="link-67" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-67', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">bins</tt><tt class="py-op">)</tt> </tt>
<a name="L82"></a><tt class="py-lineno">82</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt id="link-68" class="py-name"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.title" class="py-name" href="#" onclick="return doclink('link-68', 'title', 'link-56');">title</a></tt><tt class="py-op">(</tt><tt id="link-69" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-69', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">search_string</tt><tt class="py-op">+</tt><tt class="py-string">" for col "</tt><tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">col</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L83"></a><tt class="py-lineno">83</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt id="link-70" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-70', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">save</tt> <tt class="py-op">!=</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L84"></a><tt class="py-lineno">84</tt>  <tt class="py-line">        <tt class="py-name">filename</tt><tt class="py-op">=</tt><tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt id="link-71" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-71', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">save</tt><tt class="py-op">,</tt><tt class="py-string">'hist_col'</tt><tt class="py-op">+</tt><tt class="py-string">"%02i"</tt><tt class="py-op">%</tt><tt class="py-name">col</tt><tt class="py-op">+</tt><tt class="py-string">'.png'</tt><tt class="py-op">)</tt> </tt>
<a name="L85"></a><tt class="py-lineno">85</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">savefig</tt><tt class="py-op">(</tt><tt class="py-name">filename</tt><tt class="py-op">)</tt> </tt>
<a name="L86"></a><tt class="py-lineno">86</tt>  <tt class="py-line"><tt class="py-keyword">if</tt> <tt id="link-72" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-72', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">save</tt><tt class="py-op">==</tt><tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L87"></a><tt class="py-lineno">87</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt id="link-73" class="py-name"><a title="code.common_mode.script.args
code.ellipsesdrawer.script.args
code.outanalyzer.script.args
code.powerspectrum.script.args
code.stepdetector.script.args" class="py-name" href="#" onclick="return doclink('link-73', 'args', 'link-13');">args</a></tt><tt class="py-op">.</tt><tt class="py-name">plot</tt><tt class="py-op">==</tt><tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L88"></a><tt class="py-lineno">88</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt id="link-74" class="py-name" targets="Method code.common_mode.common_plotter.CommonPlotter.show()=code.common_mode.common_plotter.CommonPlotter-class.html#show,Method code.dipanalyzer.dipanalyzer.DipAnalyzer.show()=code.dipanalyzer.dipanalyzer.DipAnalyzer-class.html#show,Method code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.show()=code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer-class.html#show"><a title="code.common_mode.common_plotter.CommonPlotter.show
code.dipanalyzer.dipanalyzer.DipAnalyzer.show
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.show" class="py-name" href="#" onclick="return doclink('link-74', 'show', 'link-74');">show</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L89"></a><tt class="py-lineno">89</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Sun Nov  6 16:28:35 2011
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
