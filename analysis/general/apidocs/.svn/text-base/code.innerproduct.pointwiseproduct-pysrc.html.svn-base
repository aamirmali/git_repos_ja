<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>code.innerproduct.pointwiseproduct</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="code-module.html">Package&nbsp;code</a> ::
        <a href="code.innerproduct-module.html">Package&nbsp;innerproduct</a> ::
        Module&nbsp;pointwiseproduct
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="code.innerproduct.pointwiseproduct-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="code.innerproduct.pointwiseproduct-module.html">Module code.innerproduct.pointwiseproduct</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">  1</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">matplotlib</tt><tt class="py-op">.</tt><tt class="py-name">pyplot</tt> <tt class="py-keyword">as</tt> <tt class="py-name">plt</tt> </tt>
<a name="L2"></a><tt class="py-lineno">  2</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">numpy</tt> <tt class="py-keyword">as</tt> <tt class="py-name">np</tt> </tt>
<a name="L3"></a><tt class="py-lineno">  3</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-0" class="py-name" targets="Module code.innerproduct.filter=code.innerproduct.filter-module.html"><a title="code.innerproduct.filter" class="py-name" href="#" onclick="return doclink('link-0', 'filter', 'link-0');">filter</a></tt> </tt>
<a name="L4"></a><tt class="py-lineno">  4</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-1" class="py-name" targets="Package code=code-module.html"><a title="code" class="py-name" href="#" onclick="return doclink('link-1', 'code', 'link-1');">code</a></tt><tt class="py-op">.</tt><tt id="link-2" class="py-name" targets="Package code.common=code.common-module.html"><a title="code.common" class="py-name" href="#" onclick="return doclink('link-2', 'common', 'link-2');">common</a></tt><tt class="py-op">.</tt><tt id="link-3" class="py-name" targets="Module code.common.arrayfunctions=code.common.arrayfunctions-module.html"><a title="code.common.arrayfunctions" class="py-name" href="#" onclick="return doclink('link-3', 'arrayfunctions', 'link-3');">arrayfunctions</a></tt> <tt class="py-keyword">as</tt> <tt class="py-name">arf</tt> </tt>
<a name="L5"></a><tt class="py-lineno">  5</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-4" class="py-name"><a title="code" class="py-name" href="#" onclick="return doclink('link-4', 'code', 'link-1');">code</a></tt><tt class="py-op">.</tt><tt id="link-5" class="py-name"><a title="code.common" class="py-name" href="#" onclick="return doclink('link-5', 'common', 'link-2');">common</a></tt><tt class="py-op">.</tt><tt id="link-6" class="py-name" targets="Module code.common.functionanalyzer=code.common.functionanalyzer-module.html"><a title="code.common.functionanalyzer" class="py-name" href="#" onclick="return doclink('link-6', 'functionanalyzer', 'link-6');">functionanalyzer</a></tt> <tt class="py-keyword">as</tt> <tt class="py-name">fa</tt> </tt>
<a name="L6"></a><tt class="py-lineno">  6</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-7" class="py-name"><a title="code" class="py-name" href="#" onclick="return doclink('link-7', 'code', 'link-1');">code</a></tt><tt class="py-op">.</tt><tt id="link-8" class="py-name"><a title="code.common" class="py-name" href="#" onclick="return doclink('link-8', 'common', 'link-2');">common</a></tt><tt class="py-op">.</tt><tt id="link-9" class="py-name" targets="Module code.common.multistreamfunctions=code.common.multistreamfunctions-module.html"><a title="code.common.multistreamfunctions" class="py-name" href="#" onclick="return doclink('link-9', 'multistreamfunctions', 'link-9');">multistreamfunctions</a></tt> <tt class="py-keyword">as</tt> <tt class="py-name">msf</tt> </tt>
<a name="L7"></a><tt class="py-lineno">  7</tt>  <tt class="py-line"> </tt>
<a name="L8"></a><tt class="py-lineno">  8</tt>  <tt class="py-line"> </tt>
<a name="PointwiseProduct"></a><div id="PointwiseProduct-def"><a name="L9"></a><tt class="py-lineno">  9</tt> <a class="py-toggle" href="#" id="PointwiseProduct-toggle" onclick="return toggle('PointwiseProduct');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html">PointwiseProduct</a><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="PointwiseProduct-expanded"><a name="L10"></a><tt class="py-lineno"> 10</tt>  <tt class="py-line">    <tt class="py-docstring">'''Mainly used to calculate the Pointwise Product.</tt> </tt>
<a name="L11"></a><tt class="py-lineno"> 11</tt>  <tt class="py-line"><tt class="py-docstring">    @ivar data: data array that will be used in all functions. It is taken to</tt> </tt>
<a name="L12"></a><tt class="py-lineno"> 12</tt>  <tt class="py-line"><tt class="py-docstring">    be a 2 dimensional array (with row number the first dimension, and column</tt> </tt>
<a name="L13"></a><tt class="py-lineno"> 13</tt>  <tt class="py-line"><tt class="py-docstring">    number the second dimension) of data elements, where each data element is an</tt> </tt>
<a name="L14"></a><tt class="py-lineno"> 14</tt>  <tt class="py-line"><tt class="py-docstring">    array. Initialization filters it according to data_filter, and sets</tt> </tt>
<a name="L15"></a><tt class="py-lineno"> 15</tt>  <tt class="py-line"><tt class="py-docstring">    non_rows and non_cols to zeros. Initialization also normalizes each data</tt> </tt>
<a name="L16"></a><tt class="py-lineno"> 16</tt>  <tt class="py-line"><tt class="py-docstring">    element such that its euclidean norm is 1.</tt> </tt>
<a name="L17"></a><tt class="py-lineno"> 17</tt>  <tt class="py-line"><tt class="py-docstring">    @type data: numpy array, 3 dimensional</tt> </tt>
<a name="L18"></a><tt class="py-lineno"> 18</tt>  <tt class="py-line"><tt class="py-docstring">    @ivar non_rows: indicates which rows (first dimension of data) are to be</tt> </tt>
<a name="L19"></a><tt class="py-lineno"> 19</tt>  <tt class="py-line"><tt class="py-docstring">    ignored. All the data in these rows will be set to a stream of 0.</tt> </tt>
<a name="L20"></a><tt class="py-lineno"> 20</tt>  <tt class="py-line"><tt class="py-docstring">    @type non_rows: numpy array/list/tuple, shape:(*)</tt> </tt>
<a name="L21"></a><tt class="py-lineno"> 21</tt>  <tt class="py-line"><tt class="py-docstring">    @ivar non_cols: indicates which columns (second dimension of data) are to be</tt> </tt>
<a name="L22"></a><tt class="py-lineno"> 22</tt>  <tt class="py-line"><tt class="py-docstring">    ignored. All the data in these columns will be set to a stream of 0.</tt> </tt>
<a name="L23"></a><tt class="py-lineno"> 23</tt>  <tt class="py-line"><tt class="py-docstring">    @type non_cols: numpy array/list/tuple, shape:(*) </tt> </tt>
<a name="L24"></a><tt class="py-lineno"> 24</tt>  <tt class="py-line"><tt class="py-docstring">    @ivar non_elements: indicates which detectors are to be ignored. All the</tt> </tt>
<a name="L25"></a><tt class="py-lineno"> 25</tt>  <tt class="py-line"><tt class="py-docstring">    data for these detectors will be set to a stream of 0. This parameter is an</tt> </tt>
<a name="L26"></a><tt class="py-lineno"> 26</tt>  <tt class="py-line"><tt class="py-docstring">    array of detectors, with each detector represented by (row, col).</tt> </tt>
<a name="L27"></a><tt class="py-lineno"> 27</tt>  <tt class="py-line"><tt class="py-docstring">    @type non_elements: numpy array/list, shape:(*,2)'''</tt> </tt>
<a name="L28"></a><tt class="py-lineno"> 28</tt>  <tt class="py-line"> </tt>
<a name="L29"></a><tt class="py-lineno"> 29</tt>  <tt class="py-line"> </tt>
<a name="L30"></a><tt class="py-lineno"> 30</tt>  <tt class="py-line">    <tt id="link-10" class="py-name" targets="Variable code.common_mode.common_plotter.CommonPlotter.data=code.common_mode.common_plotter.CommonPlotter-class.html#data,Variable code.common_mode.script.data=code.common_mode.script-module.html#data,Variable code.dipanalyzer.dipanalyzer.DipAnalyzer.data=code.dipanalyzer.dipanalyzer.DipAnalyzer-class.html#data,Variable code.innerproduct.pointwiseproduct.PointwiseProduct.data=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#data,Variable code.outanalyzer.script.data=code.outanalyzer.script-module.html#data,Variable code.powerspectrum.script.data=code.powerspectrum.script-module.html#data,Variable code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data=code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer-class.html#data,Variable code.stepdetector.stepanalyzer.StepAnalyzer.data=code.stepdetector.stepanalyzer.StepAnalyzer-class.html#data"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-10', 'data', 'link-10');">data</a></tt><tt class="py-op">=</tt><tt class="py-name">None</tt> </tt>
<a name="L31"></a><tt class="py-lineno"> 31</tt>  <tt class="py-line">    <tt id="link-11" class="py-name" targets="Variable code.innerproduct.pointwiseproduct.PointwiseProduct.non_rows=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#non_rows,Variable code.innerproduct.similaritydrawer.SimilarityDrawer.non_rows=code.innerproduct.similaritydrawer.SimilarityDrawer-class.html#non_rows"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_rows
code.innerproduct.similaritydrawer.SimilarityDrawer.non_rows" class="py-name" href="#" onclick="return doclink('link-11', 'non_rows', 'link-11');">non_rows</a></tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L32"></a><tt class="py-lineno"> 32</tt>  <tt class="py-line">    <tt id="link-12" class="py-name" targets="Variable code.innerproduct.pointwiseproduct.PointwiseProduct.non_cols=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#non_cols,Variable code.innerproduct.similaritydrawer.SimilarityDrawer.non_cols=code.innerproduct.similaritydrawer.SimilarityDrawer-class.html#non_cols"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_cols
code.innerproduct.similaritydrawer.SimilarityDrawer.non_cols" class="py-name" href="#" onclick="return doclink('link-12', 'non_cols', 'link-12');">non_cols</a></tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L33"></a><tt class="py-lineno"> 33</tt>  <tt class="py-line">    <tt id="link-13" class="py-name" targets="Variable code.innerproduct.pointwiseproduct.PointwiseProduct.non_elements=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#non_elements"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_elements" class="py-name" href="#" onclick="return doclink('link-13', 'non_elements', 'link-13');">non_elements</a></tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L34"></a><tt class="py-lineno"> 34</tt>  <tt class="py-line"> </tt>
<a name="L35"></a><tt class="py-lineno"> 35</tt>  <tt class="py-line"> </tt>
<a name="PointwiseProduct.__init__"></a><div id="PointwiseProduct.__init__-def"><a name="L36"></a><tt class="py-lineno"> 36</tt> <a class="py-toggle" href="#" id="PointwiseProduct.__init__-toggle" onclick="return toggle('PointwiseProduct.__init__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">data</tt><tt class="py-op">,</tt> <tt class="py-param">non_rows</tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-param">non_cols</tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-param">non_elements</tt><tt class="py-op">=</tt><tt class="py-op">[</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> </tt>
<a name="L37"></a><tt class="py-lineno"> 37</tt>  <tt class="py-line">                 <tt class="py-param">sum_filter</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">,</tt> <tt class="py-param">normalize</tt><tt class="py-op">=</tt><tt class="py-name">True</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct.__init__-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="PointwiseProduct.__init__-expanded"><a name="L38"></a><tt class="py-lineno"> 38</tt>  <tt class="py-line">        <tt class="py-docstring">'''Initializes the class. Sets self.data, self.non_rows, and</tt> </tt>
<a name="L39"></a><tt class="py-lineno"> 39</tt>  <tt class="py-line"><tt class="py-docstring">        self.non_cols.</tt> </tt>
<a name="L40"></a><tt class="py-lineno"> 40</tt>  <tt class="py-line"><tt class="py-docstring">        @param data: the input data. It is to be a 2 dimensional array (The</tt> </tt>
<a name="L41"></a><tt class="py-lineno"> 41</tt>  <tt class="py-line"><tt class="py-docstring">        first dimension is considered the row number, while the second dimenion</tt> </tt>
<a name="L42"></a><tt class="py-lineno"> 42</tt>  <tt class="py-line"><tt class="py-docstring">        is considered the column number.) of data elements, where each data</tt> </tt>
<a name="L43"></a><tt class="py-lineno"> 43</tt>  <tt class="py-line"><tt class="py-docstring">        element is an array.</tt> </tt>
<a name="L44"></a><tt class="py-lineno"> 44</tt>  <tt class="py-line"><tt class="py-docstring">        @type data: numpy array, 3 dimensions</tt> </tt>
<a name="L45"></a><tt class="py-lineno"> 45</tt>  <tt class="py-line"><tt class="py-docstring">        @param non_rows: indicates which rows (first dimension in data) should</tt> </tt>
<a name="L46"></a><tt class="py-lineno"> 46</tt>  <tt class="py-line"><tt class="py-docstring">        be ignored. Data elements in these rows will be set to a stream of 0.</tt> </tt>
<a name="L47"></a><tt class="py-lineno"> 47</tt>  <tt class="py-line"><tt class="py-docstring">        @type non_rows: numpy array/list/tuple, shape:(*)</tt> </tt>
<a name="L48"></a><tt class="py-lineno"> 48</tt>  <tt class="py-line"><tt class="py-docstring">        @param non_cols: indicates which columns (second dimension in data)</tt> </tt>
<a name="L49"></a><tt class="py-lineno"> 49</tt>  <tt class="py-line"><tt class="py-docstring">        should be ignored. Data elements in these columns will be set to a</tt> </tt>
<a name="L50"></a><tt class="py-lineno"> 50</tt>  <tt class="py-line"><tt class="py-docstring">        stream of 0.</tt> </tt>
<a name="L51"></a><tt class="py-lineno"> 51</tt>  <tt class="py-line"><tt class="py-docstring">        @type non_cols: numpy array/list/tuple, shape:(*)</tt> </tt>
<a name="L52"></a><tt class="py-lineno"> 52</tt>  <tt class="py-line"><tt class="py-docstring">        @param non_elements: indicates which detectors are to be ignored. All</tt> </tt>
<a name="L53"></a><tt class="py-lineno"> 53</tt>  <tt class="py-line"><tt class="py-docstring">        the data for these detectors will be set to a stream of 0. This</tt> </tt>
<a name="L54"></a><tt class="py-lineno"> 54</tt>  <tt class="py-line"><tt class="py-docstring">        parameter is to be an array of detectors, with each detector</tt> </tt>
<a name="L55"></a><tt class="py-lineno"> 55</tt>  <tt class="py-line"><tt class="py-docstring">        represented by (row, col).</tt> </tt>
<a name="L56"></a><tt class="py-lineno"> 56</tt>  <tt class="py-line"><tt class="py-docstring">        @type non_elements: numpy array/list, shape:(*,2)</tt> </tt>
<a name="L57"></a><tt class="py-lineno"> 57</tt>  <tt class="py-line"><tt class="py-docstring">        @param sum_filter: indicates how data should be filtered. This</tt> </tt>
<a name="L58"></a><tt class="py-lineno"> 58</tt>  <tt class="py-line"><tt class="py-docstring">        parameter can take values of None, 'array_sum', 'col_sum', or</tt> </tt>
<a name="L59"></a><tt class="py-lineno"> 59</tt>  <tt class="py-line"><tt class="py-docstring">        'row_sum'. None: data is not filtered. 'array_sum': the projection of</tt> </tt>
<a name="L60"></a><tt class="py-lineno"> 60</tt>  <tt class="py-line"><tt class="py-docstring">        the data along the sum of all data is filtered out. 'row_sum': the</tt> </tt>
<a name="L61"></a><tt class="py-lineno"> 61</tt>  <tt class="py-line"><tt class="py-docstring">        projection of data along its respective sum within a row is filtered</tt> </tt>
<a name="L62"></a><tt class="py-lineno"> 62</tt>  <tt class="py-line"><tt class="py-docstring">        out. 'col_sum': the projection of data along its respective sum within</tt> </tt>
<a name="L63"></a><tt class="py-lineno"> 63</tt>  <tt class="py-line"><tt class="py-docstring">        a column is filtered out.</tt> </tt>
<a name="L64"></a><tt class="py-lineno"> 64</tt>  <tt class="py-line"><tt class="py-docstring">        @type sum_filter: str </tt> </tt>
<a name="L65"></a><tt class="py-lineno"> 65</tt>  <tt class="py-line"><tt class="py-docstring">        @param normalize: determines whether or not data is normalized. If set</tt> </tt>
<a name="L66"></a><tt class="py-lineno"> 66</tt>  <tt class="py-line"><tt class="py-docstring">        to True, the data will be normalized by dividing by its euclidean norm</tt> </tt>
<a name="L67"></a><tt class="py-lineno"> 67</tt>  <tt class="py-line"><tt class="py-docstring">        (root-sum-square)</tt> </tt>
<a name="L68"></a><tt class="py-lineno"> 68</tt>  <tt class="py-line"><tt class="py-docstring">        @type normalize: boolean '''</tt> </tt>
<a name="L69"></a><tt class="py-lineno"> 69</tt>  <tt class="py-line">        <tt id="link-14" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-14', 'data', 'link-10');">data</a></tt><tt class="py-op">=</tt><tt id="link-15" class="py-name"><a title="code.innerproduct.filter" class="py-name" href="#" onclick="return doclink('link-15', 'filter', 'link-0');">filter</a></tt><tt class="py-op">.</tt><tt id="link-16" class="py-name" targets="Function code.innerproduct.filter.general_filter()=code.innerproduct.filter-module.html#general_filter"><a title="code.innerproduct.filter.general_filter" class="py-name" href="#" onclick="return doclink('link-16', 'general_filter', 'link-16');">general_filter</a></tt><tt class="py-op">(</tt><tt id="link-17" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-17', 'data', 'link-10');">data</a></tt><tt class="py-op">,</tt> <tt id="link-18" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_rows
code.innerproduct.similaritydrawer.SimilarityDrawer.non_rows" class="py-name" href="#" onclick="return doclink('link-18', 'non_rows', 'link-11');">non_rows</a></tt><tt class="py-op">=</tt><tt id="link-19" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_rows
code.innerproduct.similaritydrawer.SimilarityDrawer.non_rows" class="py-name" href="#" onclick="return doclink('link-19', 'non_rows', 'link-11');">non_rows</a></tt><tt class="py-op">,</tt> <tt id="link-20" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_cols
code.innerproduct.similaritydrawer.SimilarityDrawer.non_cols" class="py-name" href="#" onclick="return doclink('link-20', 'non_cols', 'link-12');">non_cols</a></tt><tt class="py-op">=</tt><tt id="link-21" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_cols
code.innerproduct.similaritydrawer.SimilarityDrawer.non_cols" class="py-name" href="#" onclick="return doclink('link-21', 'non_cols', 'link-12');">non_cols</a></tt><tt class="py-op">,</tt>  </tt>
<a name="L70"></a><tt class="py-lineno"> 70</tt>  <tt class="py-line">                                   <tt id="link-22" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_elements" class="py-name" href="#" onclick="return doclink('link-22', 'non_elements', 'link-13');">non_elements</a></tt><tt class="py-op">=</tt><tt id="link-23" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_elements" class="py-name" href="#" onclick="return doclink('link-23', 'non_elements', 'link-13');">non_elements</a></tt><tt class="py-op">,</tt> </tt>
<a name="L71"></a><tt class="py-lineno"> 71</tt>  <tt class="py-line">                                   <tt class="py-name">mean_filter</tt><tt class="py-op">=</tt><tt class="py-name">True</tt><tt class="py-op">,</tt> <tt id="link-24" class="py-name" targets="Function code.common.multistreamfunctions.sum_filter()=code.common.multistreamfunctions-module.html#sum_filter"><a title="code.common.multistreamfunctions.sum_filter" class="py-name" href="#" onclick="return doclink('link-24', 'sum_filter', 'link-24');">sum_filter</a></tt><tt class="py-op">=</tt><tt id="link-25" class="py-name"><a title="code.common.multistreamfunctions.sum_filter" class="py-name" href="#" onclick="return doclink('link-25', 'sum_filter', 'link-24');">sum_filter</a></tt><tt class="py-op">)</tt> </tt>
<a name="L72"></a><tt class="py-lineno"> 72</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt id="link-26" class="py-name" targets="Function code.common.arrayfunctions.normalize()=code.common.arrayfunctions-module.html#normalize,Variable code.common_mode.common_plotter.CommonPlotter.normalize=code.common_mode.common_plotter.CommonPlotter-class.html#normalize"><a title="code.common.arrayfunctions.normalize
code.common_mode.common_plotter.CommonPlotter.normalize" class="py-name" href="#" onclick="return doclink('link-26', 'normalize', 'link-26');">normalize</a></tt> <tt class="py-op">==</tt><tt class="py-name">True</tt><tt class="py-op">:</tt> </tt>
<a name="L73"></a><tt class="py-lineno"> 73</tt>  <tt class="py-line">            <tt id="link-27" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-27', 'data', 'link-10');">data</a></tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-28" class="py-name" targets="Function code.common.arrayfunctions.modify_array()=code.common.arrayfunctions-module.html#modify_array"><a title="code.common.arrayfunctions.modify_array" class="py-name" href="#" onclick="return doclink('link-28', 'modify_array', 'link-28');">modify_array</a></tt><tt class="py-op">(</tt><tt id="link-29" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-29', 'data', 'link-10');">data</a></tt><tt class="py-op">,</tt> <tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-30" class="py-name" targets="Function code.common.arrayfunctions.wrap()=code.common.arrayfunctions-module.html#wrap"><a title="code.common.arrayfunctions.wrap" class="py-name" href="#" onclick="return doclink('link-30', 'wrap', 'link-30');">wrap</a></tt><tt class="py-op">(</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-31" class="py-name"><a title="code.common.arrayfunctions.normalize
code.common_mode.common_plotter.CommonPlotter.normalize" class="py-name" href="#" onclick="return doclink('link-31', 'normalize', 'link-26');">normalize</a></tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">(</tt><tt id="link-32" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-32', 'data', 'link-10');">data</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L74"></a><tt class="py-lineno"> 74</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-33" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-33', 'data', 'link-10');">data</a></tt><tt class="py-op">=</tt><tt id="link-34" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-34', 'data', 'link-10');">data</a></tt> </tt>
<a name="L75"></a><tt class="py-lineno"> 75</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-35" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_rows
code.innerproduct.similaritydrawer.SimilarityDrawer.non_rows" class="py-name" href="#" onclick="return doclink('link-35', 'non_rows', 'link-11');">non_rows</a></tt><tt class="py-op">=</tt><tt id="link-36" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_rows
code.innerproduct.similaritydrawer.SimilarityDrawer.non_rows" class="py-name" href="#" onclick="return doclink('link-36', 'non_rows', 'link-11');">non_rows</a></tt> </tt>
<a name="L76"></a><tt class="py-lineno"> 76</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-37" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_cols
code.innerproduct.similaritydrawer.SimilarityDrawer.non_cols" class="py-name" href="#" onclick="return doclink('link-37', 'non_cols', 'link-12');">non_cols</a></tt><tt class="py-op">=</tt><tt id="link-38" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_cols
code.innerproduct.similaritydrawer.SimilarityDrawer.non_cols" class="py-name" href="#" onclick="return doclink('link-38', 'non_cols', 'link-12');">non_cols</a></tt> </tt>
<a name="L77"></a><tt class="py-lineno"> 77</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-39" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_elements" class="py-name" href="#" onclick="return doclink('link-39', 'non_elements', 'link-13');">non_elements</a></tt><tt class="py-op">=</tt><tt id="link-40" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.non_elements" class="py-name" href="#" onclick="return doclink('link-40', 'non_elements', 'link-13');">non_elements</a></tt> </tt>
</div><a name="L78"></a><tt class="py-lineno"> 78</tt>  <tt class="py-line"> </tt>
<a name="L79"></a><tt class="py-lineno"> 79</tt>  <tt class="py-line"> </tt>
<a name="PointwiseProduct.standard_sum"></a><div id="PointwiseProduct.standard_sum-def"><a name="L80"></a><tt class="py-lineno"> 80</tt> <a class="py-toggle" href="#" id="PointwiseProduct.standard_sum-toggle" onclick="return toggle('PointwiseProduct.standard_sum');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#standard_sum">standard_sum</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">axis</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct.standard_sum-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="PointwiseProduct.standard_sum-expanded"><a name="L81"></a><tt class="py-lineno"> 81</tt>  <tt class="py-line">        <tt class="py-docstring">'''Finds the normalized pointwise sum of self.data.</tt> </tt>
<a name="L82"></a><tt class="py-lineno"> 82</tt>  <tt class="py-line"><tt class="py-docstring">        @return: an array of normalized pointwise sum. The resulting sum has a</tt> </tt>
<a name="L83"></a><tt class="py-lineno"> 83</tt>  <tt class="py-line"><tt class="py-docstring">        norm of 1.</tt> </tt>
<a name="L84"></a><tt class="py-lineno"> 84</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: numpy array</tt> </tt>
<a name="L85"></a><tt class="py-lineno"> 85</tt>  <tt class="py-line"><tt class="py-docstring">        @param axis: the axis to sum over. It is set to None by default, and</tt> </tt>
<a name="L86"></a><tt class="py-lineno"> 86</tt>  <tt class="py-line"><tt class="py-docstring">        when it is set to None, it will sum over all axis except the last.</tt> </tt>
<a name="L87"></a><tt class="py-lineno"> 87</tt>  <tt class="py-line"><tt class="py-docstring">        @type axis: int '''</tt> </tt>
<a name="L88"></a><tt class="py-lineno"> 88</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">axis</tt><tt class="py-op">!=</tt><tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L89"></a><tt class="py-lineno"> 89</tt>  <tt class="py-line">            <tt class="py-name">sum_data</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-41" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-41', 'data', 'link-10');">data</a></tt><tt class="py-op">,</tt> <tt class="py-name">axis</tt><tt class="py-op">)</tt> </tt>
<a name="L90"></a><tt class="py-lineno"> 90</tt>  <tt class="py-line">            <tt class="py-name">standardized_sum</tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-42" class="py-name"><a title="code.common.arrayfunctions.modify_array" class="py-name" href="#" onclick="return doclink('link-42', 'modify_array', 'link-28');">modify_array</a></tt><tt class="py-op">(</tt><tt class="py-name">sum_data</tt><tt class="py-op">,</tt>  </tt>
<a name="L91"></a><tt class="py-lineno"> 91</tt>  <tt class="py-line">                                              <tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-43" class="py-name"><a title="code.common.arrayfunctions.wrap" class="py-name" href="#" onclick="return doclink('link-43', 'wrap', 'link-30');">wrap</a></tt><tt class="py-op">(</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-44" class="py-name" targets="Function code.common.arrayfunctions.standardize()=code.common.arrayfunctions-module.html#standardize"><a title="code.common.arrayfunctions.standardize" class="py-name" href="#" onclick="return doclink('link-44', 'standardize', 'link-44');">standardize</a></tt><tt class="py-op">)</tt><tt class="py-op">,</tt>  </tt>
<a name="L92"></a><tt class="py-lineno"> 92</tt>  <tt class="py-line">                                              <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">(</tt><tt class="py-name">sum_data</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L93"></a><tt class="py-lineno"> 93</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L94"></a><tt class="py-lineno"> 94</tt>  <tt class="py-line">            <tt class="py-name">sum_data</tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-45" class="py-name" targets="Function code.common.arrayfunctions.sum_space_array_function()=code.common.arrayfunctions-module.html#sum_space_array_function"><a title="code.common.arrayfunctions.sum_space_array_function" class="py-name" href="#" onclick="return doclink('link-45', 'sum_space_array_function', 'link-45');">sum_space_array_function</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-46" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-46', 'data', 'link-10');">data</a></tt><tt class="py-op">,</tt> <tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-47" class="py-name"><a title="code.common.arrayfunctions.wrap" class="py-name" href="#" onclick="return doclink('link-47', 'wrap', 'link-30');">wrap</a></tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">)</tt><tt class="py-op">,</tt>  </tt>
<a name="L95"></a><tt class="py-lineno"> 95</tt>  <tt class="py-line">                                                  <tt class="py-name">op_dim</tt><tt class="py-op">=</tt><tt class="py-number">1</tt><tt class="py-op">,</tt>  </tt>
<a name="L96"></a><tt class="py-lineno"> 96</tt>  <tt class="py-line">                                                  <tt class="py-name">op_ar_dim</tt><tt class="py-op">=</tt><tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-48" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-48', 'data', 'link-10');">data</a></tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L97"></a><tt class="py-lineno"> 97</tt>  <tt class="py-line">            <tt class="py-name">standardized_sum</tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-49" class="py-name"><a title="code.common.arrayfunctions.standardize" class="py-name" href="#" onclick="return doclink('link-49', 'standardize', 'link-44');">standardize</a></tt><tt class="py-op">(</tt><tt class="py-name">sum_data</tt><tt class="py-op">)</tt> </tt>
<a name="L98"></a><tt class="py-lineno"> 98</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">standardized_sum</tt> </tt>
</div><a name="L99"></a><tt class="py-lineno"> 99</tt>  <tt class="py-line"> </tt>
<a name="L100"></a><tt class="py-lineno">100</tt>  <tt class="py-line"> </tt>
<a name="PointwiseProduct.data_data_pointwise_product"></a><div id="PointwiseProduct.data_data_pointwise_product-def"><a name="L101"></a><tt class="py-lineno">101</tt> <a class="py-toggle" href="#" id="PointwiseProduct.data_data_pointwise_product-toggle" onclick="return toggle('PointwiseProduct.data_data_pointwise_product');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#data_data_pointwise_product">data_data_pointwise_product</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct.data_data_pointwise_product-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="PointwiseProduct.data_data_pointwise_product-expanded"><a name="L102"></a><tt class="py-lineno">102</tt>  <tt class="py-line">        <tt class="py-docstring">'''Takes self.data and calculate every pointwise product.</tt> </tt>
<a name="L103"></a><tt class="py-lineno">103</tt>  <tt class="py-line"><tt class="py-docstring">        @return: an array of all the pointwise products of dimension</tt> </tt>
<a name="L104"></a><tt class="py-lineno">104</tt>  <tt class="py-line"><tt class="py-docstring">        (dim(self.data)-1)*(dim(self.data)-1). The first (dim(self.data)-1)</tt> </tt>
<a name="L105"></a><tt class="py-lineno">105</tt>  <tt class="py-line"><tt class="py-docstring">        dimensions specify the index first data element, and the second</tt> </tt>
<a name="L106"></a><tt class="py-lineno">106</tt>  <tt class="py-line"><tt class="py-docstring">        (dim(self.data)-1) dimensions specify the index of the second data</tt> </tt>
<a name="L107"></a><tt class="py-lineno">107</tt>  <tt class="py-line"><tt class="py-docstring">        element. The pointwise product (an inner product) of those two data</tt> </tt>
<a name="L108"></a><tt class="py-lineno">108</tt>  <tt class="py-line"><tt class="py-docstring">        element is calculated and placed in the corresponding index.</tt> </tt>
<a name="L109"></a><tt class="py-lineno">109</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: numpy array'''</tt> </tt>
<a name="L110"></a><tt class="py-lineno">110</tt>  <tt class="py-line">        <tt class="py-keyword">def</tt> <tt class="py-def-name">normalize_pointwise_product</tt><tt class="py-op">(</tt><tt class="py-param">x</tt><tt class="py-op">,</tt> <tt class="py-param">i</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L111"></a><tt class="py-lineno">111</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">&gt;=</tt><tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">:</tt> </tt>
<a name="L112"></a><tt class="py-lineno">112</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-name">x</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">*</tt><tt class="py-name">x</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L113"></a><tt class="py-lineno">113</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L114"></a><tt class="py-lineno">114</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">nan</tt> </tt>
</div><a name="L115"></a><tt class="py-lineno">115</tt>  <tt class="py-line">        <tt class="py-name">all_pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-50" class="py-name" targets="Function code.common.arrayfunctions.product_space_array_function()=code.common.arrayfunctions-module.html#product_space_array_function"><a title="code.common.arrayfunctions.product_space_array_function" class="py-name" href="#" onclick="return doclink('link-50', 'product_space_array_function', 'link-50');">product_space_array_function</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-51" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-51', 'data', 'link-10');">data</a></tt><tt class="py-op">,</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-52" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-52', 'data', 'link-10');">data</a></tt><tt class="py-op">)</tt><tt class="py-op">,</tt>  </tt>
<a name="L116"></a><tt class="py-lineno">116</tt>  <tt class="py-line">                                                               <tt class="py-name">normalize_pointwise_product</tt><tt class="py-op">,</tt>  </tt>
<a name="L117"></a><tt class="py-lineno">117</tt>  <tt class="py-line">                                                               <tt class="py-op">(</tt><tt class="py-number">2</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L118"></a><tt class="py-lineno">118</tt>  <tt class="py-line">        <tt class="py-keyword">def</tt> <tt class="py-def-name">reflect</tt><tt class="py-op">(</tt><tt class="py-param">x</tt><tt class="py-op">,</tt> <tt class="py-param">i</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L119"></a><tt class="py-lineno">119</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">&lt;</tt><tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">:</tt> </tt>
<a name="L120"></a><tt class="py-lineno">120</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-name">all_pointwise_product</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">2</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">3</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">]</tt> </tt>
<a name="L121"></a><tt class="py-lineno">121</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L122"></a><tt class="py-lineno">122</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-name">x</tt> </tt>
</div><a name="L123"></a><tt class="py-lineno">123</tt>  <tt class="py-line">        <tt class="py-name">all_pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-53" class="py-name"><a title="code.common.arrayfunctions.modify_array" class="py-name" href="#" onclick="return doclink('link-53', 'modify_array', 'link-28');">modify_array</a></tt><tt class="py-op">(</tt><tt class="py-name">all_pointwise_product</tt><tt class="py-op">,</tt> <tt class="py-name">reflect</tt><tt class="py-op">,</tt> <tt class="py-number">4</tt><tt class="py-op">)</tt> </tt>
<a name="L124"></a><tt class="py-lineno">124</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">all_pointwise_product</tt> </tt>
</div><a name="L125"></a><tt class="py-lineno">125</tt>  <tt class="py-line"> </tt>
<a name="L126"></a><tt class="py-lineno">126</tt>  <tt class="py-line">     </tt>
<a name="PointwiseProduct.sum_data_pointwise_product"></a><div id="PointwiseProduct.sum_data_pointwise_product-def"><a name="L127"></a><tt class="py-lineno">127</tt> <a class="py-toggle" href="#" id="PointwiseProduct.sum_data_pointwise_product-toggle" onclick="return toggle('PointwiseProduct.sum_data_pointwise_product');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#sum_data_pointwise_product">sum_data_pointwise_product</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">axis</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct.sum_data_pointwise_product-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="PointwiseProduct.sum_data_pointwise_product-expanded"><a name="L128"></a><tt class="py-lineno">128</tt>  <tt class="py-line">        <tt class="py-docstring">'''Calculates all the pointwise product of the sum of an axis against</tt> </tt>
<a name="L129"></a><tt class="py-lineno">129</tt>  <tt class="py-line"><tt class="py-docstring">        all the data.</tt> </tt>
<a name="L130"></a><tt class="py-lineno">130</tt>  <tt class="py-line"><tt class="py-docstring">        @return: an array of the pointwise products.</tt> </tt>
<a name="L131"></a><tt class="py-lineno">131</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype: numpy array, 2 or 3 dimensional</tt> </tt>
<a name="L132"></a><tt class="py-lineno">132</tt>  <tt class="py-line"><tt class="py-docstring">        @param axis: indicate the axis to sum over. If axis is None, this</tt> </tt>
<a name="L133"></a><tt class="py-lineno">133</tt>  <tt class="py-line"><tt class="py-docstring">        function will sum over all but the last axis.</tt> </tt>
<a name="L134"></a><tt class="py-lineno">134</tt>  <tt class="py-line"><tt class="py-docstring">        @type axis: int '''</tt> </tt>
<a name="L135"></a><tt class="py-lineno">135</tt>  <tt class="py-line">        <tt class="py-name">standardized_sum</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">array</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-54" class="py-name" targets="Method code.innerproduct.pointwiseproduct.PointwiseProduct.standard_sum()=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#standard_sum"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.standard_sum" class="py-name" href="#" onclick="return doclink('link-54', 'standard_sum', 'link-54');">standard_sum</a></tt><tt class="py-op">(</tt><tt class="py-name">axis</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L136"></a><tt class="py-lineno">136</tt>  <tt class="py-line">        <tt class="py-keyword">def</tt> <tt class="py-def-name">pointwise_product</tt><tt class="py-op">(</tt><tt class="py-param">x</tt><tt class="py-op">,</tt> <tt class="py-param">i</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L137"></a><tt class="py-lineno">137</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-name">x</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">*</tt><tt class="py-name">x</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
</div><a name="L138"></a><tt class="py-lineno">138</tt>  <tt class="py-line">        <tt class="py-name">product_array</tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-55" class="py-name"><a title="code.common.arrayfunctions.product_space_array_function" class="py-name" href="#" onclick="return doclink('link-55', 'product_space_array_function', 'link-50');">product_space_array_function</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">standardized_sum</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-56" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-56', 'data', 'link-10');">data</a></tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L139"></a><tt class="py-lineno">139</tt>  <tt class="py-line">                                                       <tt class="py-name">pointwise_product</tt><tt class="py-op">,</tt>  </tt>
<a name="L140"></a><tt class="py-lineno">140</tt>  <tt class="py-line">                                                       <tt class="py-op">(</tt><tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">standardized_sum</tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L141"></a><tt class="py-lineno">141</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">array</tt><tt class="py-op">(</tt><tt class="py-name">product_array</tt><tt class="py-op">)</tt> </tt>
</div><a name="L142"></a><tt class="py-lineno">142</tt>  <tt class="py-line"> </tt>
<a name="L143"></a><tt class="py-lineno">143</tt>  <tt class="py-line"> </tt>
<a name="PointwiseProduct.sum_sum_pointwise_product"></a><div id="PointwiseProduct.sum_sum_pointwise_product-def"><a name="L144"></a><tt class="py-lineno">144</tt> <a class="py-toggle" href="#" id="PointwiseProduct.sum_sum_pointwise_product-toggle" onclick="return toggle('PointwiseProduct.sum_sum_pointwise_product');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#sum_sum_pointwise_product">sum_sum_pointwise_product</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">axis1</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">,</tt> <tt class="py-param">axis2</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct.sum_sum_pointwise_product-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="PointwiseProduct.sum_sum_pointwise_product-expanded"><a name="L145"></a><tt class="py-lineno">145</tt>  <tt class="py-line">        <tt class="py-docstring">'''Calculates all the pointwise product of the sum of data along axis1</tt> </tt>
<a name="L146"></a><tt class="py-lineno">146</tt>  <tt class="py-line"><tt class="py-docstring">        against the sum of data along axis2.</tt> </tt>
<a name="L147"></a><tt class="py-lineno">147</tt>  <tt class="py-line"><tt class="py-docstring">        @type axis1: int</tt> </tt>
<a name="L148"></a><tt class="py-lineno">148</tt>  <tt class="py-line"><tt class="py-docstring">        @type axis2: int '''</tt> </tt>
<a name="L149"></a><tt class="py-lineno">149</tt>  <tt class="py-line">        <tt class="py-name">standardized_sum_1</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">array</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-57" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.standard_sum" class="py-name" href="#" onclick="return doclink('link-57', 'standard_sum', 'link-54');">standard_sum</a></tt><tt class="py-op">(</tt><tt class="py-name">axis1</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L150"></a><tt class="py-lineno">150</tt>  <tt class="py-line">        <tt class="py-name">standardized_sum_2</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">array</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-58" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.standard_sum" class="py-name" href="#" onclick="return doclink('link-58', 'standard_sum', 'link-54');">standard_sum</a></tt><tt class="py-op">(</tt><tt class="py-name">axis2</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L151"></a><tt class="py-lineno">151</tt>  <tt class="py-line">        <tt class="py-keyword">def</tt> <tt class="py-def-name">pointwise_product</tt><tt class="py-op">(</tt><tt class="py-param">x</tt><tt class="py-op">,</tt> <tt class="py-param">i</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L152"></a><tt class="py-lineno">152</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-name">x</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">*</tt><tt class="py-name">x</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
</div><a name="L153"></a><tt class="py-lineno">153</tt>  <tt class="py-line">        <tt class="py-name">product_array</tt><tt class="py-op">=</tt><tt class="py-name">arf</tt><tt class="py-op">.</tt><tt id="link-59" class="py-name"><a title="code.common.arrayfunctions.product_space_array_function" class="py-name" href="#" onclick="return doclink('link-59', 'product_space_array_function', 'link-50');">product_space_array_function</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">standardized_sum_1</tt><tt class="py-op">,</tt> <tt class="py-name">standardized_sum_2</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L154"></a><tt class="py-lineno">154</tt>  <tt class="py-line">                                                       <tt class="py-name">pointwise_product</tt><tt class="py-op">,</tt>  </tt>
<a name="L155"></a><tt class="py-lineno">155</tt>  <tt class="py-line">                                                       <tt class="py-op">(</tt><tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">standardized_sum_1</tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">,</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">standardized_sum_2</tt><tt class="py-op">.</tt><tt class="py-name">shape</tt><tt class="py-op">)</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L156"></a><tt class="py-lineno">156</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">array</tt><tt class="py-op">(</tt><tt class="py-name">product_array</tt><tt class="py-op">)</tt> </tt>
</div><a name="L157"></a><tt class="py-lineno">157</tt>  <tt class="py-line"> </tt>
<a name="L158"></a><tt class="py-lineno">158</tt>  <tt class="py-line"> </tt>
<a name="PointwiseProduct.to_file"></a><div id="PointwiseProduct.to_file-def"><a name="L159"></a><tt class="py-lineno">159</tt> <a class="py-toggle" href="#" id="PointwiseProduct.to_file-toggle" onclick="return toggle('PointwiseProduct.to_file');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#to_file">to_file</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">filename</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct.to_file-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="PointwiseProduct.to_file-expanded"><a name="L160"></a><tt class="py-lineno">160</tt>  <tt class="py-line">        <tt class="py-docstring">'''Saves multiple arrays of pointwise product to a npz file. The arrays</tt> </tt>
<a name="L161"></a><tt class="py-lineno">161</tt>  <tt class="py-line"><tt class="py-docstring">        are placed into a NpzFile object, which is a dictionary of arrays. The</tt> </tt>
<a name="L162"></a><tt class="py-lineno">162</tt>  <tt class="py-line"><tt class="py-docstring">        arrays saved are named 'data_data', 'row_sum_data', 'col_sum_data',</tt> </tt>
<a name="L163"></a><tt class="py-lineno">163</tt>  <tt class="py-line"><tt class="py-docstring">        'array_sum_data', 'row_sum_row_sum, and 'col_sum_col_sum'.</tt> </tt>
<a name="L164"></a><tt class="py-lineno">164</tt>  <tt class="py-line"><tt class="py-docstring">        @param filename: the name of file where the arrays are to be saved.</tt> </tt>
<a name="L165"></a><tt class="py-lineno">165</tt>  <tt class="py-line"><tt class="py-docstring">        @type filename: str, end with '.npz' '''</tt> </tt>
<a name="L166"></a><tt class="py-lineno">166</tt>  <tt class="py-line">        <tt id="link-60" class="py-name" targets="Method code.innerproduct.pointwiseproduct.PointwiseProduct.data_data_pointwise_product()=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#data_data_pointwise_product"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.data_data_pointwise_product" class="py-name" href="#" onclick="return doclink('link-60', 'data_data_pointwise_product', 'link-60');">data_data_pointwise_product</a></tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-61" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.data_data_pointwise_product" class="py-name" href="#" onclick="return doclink('link-61', 'data_data_pointwise_product', 'link-60');">data_data_pointwise_product</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">3</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L167"></a><tt class="py-lineno">167</tt>  <tt class="py-line">        <tt class="py-name">row_sum_data_pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-62" class="py-name" targets="Method code.innerproduct.pointwiseproduct.PointwiseProduct.sum_data_pointwise_product()=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#sum_data_pointwise_product"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.sum_data_pointwise_product" class="py-name" href="#" onclick="return doclink('link-62', 'sum_data_pointwise_product', 'link-62');">sum_data_pointwise_product</a></tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">,</tt><tt class="py-op">(</tt><tt class="py-number">0</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">,</tt><tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L168"></a><tt class="py-lineno">168</tt>  <tt class="py-line">        <tt class="py-name">col_sum_data_pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-63" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.sum_data_pointwise_product" class="py-name" href="#" onclick="return doclink('link-63', 'sum_data_pointwise_product', 'link-62');">sum_data_pointwise_product</a></tt><tt class="py-op">(</tt><tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">,</tt><tt class="py-op">(</tt><tt class="py-number">0</tt><tt class="py-op">,</tt><tt class="py-number">2</tt><tt class="py-op">,</tt><tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L169"></a><tt class="py-lineno">169</tt>  <tt class="py-line">        <tt class="py-name">array_sum_data_pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">transpose</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-64" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.sum_data_pointwise_product" class="py-name" href="#" onclick="return doclink('link-64', 'sum_data_pointwise_product', 'link-62');">sum_data_pointwise_product</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L170"></a><tt class="py-lineno">170</tt>  <tt class="py-line">        <tt class="py-name">row_sum_row_sum_pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-65" class="py-name" targets="Method code.innerproduct.pointwiseproduct.PointwiseProduct.sum_sum_pointwise_product()=code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#sum_sum_pointwise_product"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.sum_sum_pointwise_product" class="py-name" href="#" onclick="return doclink('link-65', 'sum_sum_pointwise_product', 'link-65');">sum_sum_pointwise_product</a></tt><tt class="py-op">(</tt><tt class="py-number">1</tt><tt class="py-op">,</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L171"></a><tt class="py-lineno">171</tt>  <tt class="py-line">        <tt class="py-name">col_sum_col_sum_pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-66" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.sum_sum_pointwise_product" class="py-name" href="#" onclick="return doclink('link-66', 'sum_sum_pointwise_product', 'link-65');">sum_sum_pointwise_product</a></tt><tt class="py-op">(</tt><tt class="py-number">0</tt><tt class="py-op">,</tt><tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L172"></a><tt class="py-lineno">172</tt>  <tt class="py-line">        <tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">savez</tt><tt class="py-op">(</tt><tt class="py-name">filename</tt><tt class="py-op">,</tt>  </tt>
<a name="L173"></a><tt class="py-lineno">173</tt>  <tt class="py-line">                 <tt class="py-name">data_data</tt><tt class="py-op">=</tt><tt id="link-67" class="py-name"><a title="code.innerproduct.pointwiseproduct.PointwiseProduct.data_data_pointwise_product" class="py-name" href="#" onclick="return doclink('link-67', 'data_data_pointwise_product', 'link-60');">data_data_pointwise_product</a></tt><tt class="py-op">,</tt>  </tt>
<a name="L174"></a><tt class="py-lineno">174</tt>  <tt class="py-line">                 <tt id="link-68" class="py-name" targets="Variable code.innerproduct.similaritydrawer.SimilarityDrawer.row_sum_data=code.innerproduct.similaritydrawer.SimilarityDrawer-class.html#row_sum_data"><a title="code.innerproduct.similaritydrawer.SimilarityDrawer.row_sum_data" class="py-name" href="#" onclick="return doclink('link-68', 'row_sum_data', 'link-68');">row_sum_data</a></tt><tt class="py-op">=</tt><tt class="py-name">row_sum_data_pointwise_product</tt><tt class="py-op">,</tt>  </tt>
<a name="L175"></a><tt class="py-lineno">175</tt>  <tt class="py-line">                 <tt id="link-69" class="py-name" targets="Variable code.innerproduct.similaritydrawer.SimilarityDrawer.col_sum_data=code.innerproduct.similaritydrawer.SimilarityDrawer-class.html#col_sum_data"><a title="code.innerproduct.similaritydrawer.SimilarityDrawer.col_sum_data" class="py-name" href="#" onclick="return doclink('link-69', 'col_sum_data', 'link-69');">col_sum_data</a></tt><tt class="py-op">=</tt><tt class="py-name">col_sum_data_pointwise_product</tt><tt class="py-op">,</tt>  </tt>
<a name="L176"></a><tt class="py-lineno">176</tt>  <tt class="py-line">                 <tt id="link-70" class="py-name" targets="Variable code.innerproduct.similaritydrawer.SimilarityDrawer.array_sum_data=code.innerproduct.similaritydrawer.SimilarityDrawer-class.html#array_sum_data"><a title="code.innerproduct.similaritydrawer.SimilarityDrawer.array_sum_data" class="py-name" href="#" onclick="return doclink('link-70', 'array_sum_data', 'link-70');">array_sum_data</a></tt><tt class="py-op">=</tt><tt class="py-name">array_sum_data_pointwise_product</tt><tt class="py-op">,</tt>  </tt>
<a name="L177"></a><tt class="py-lineno">177</tt>  <tt class="py-line">                 <tt id="link-71" class="py-name" targets="Variable code.innerproduct.similaritydrawer.SimilarityDrawer.row_sum_row_sum=code.innerproduct.similaritydrawer.SimilarityDrawer-class.html#row_sum_row_sum"><a title="code.innerproduct.similaritydrawer.SimilarityDrawer.row_sum_row_sum" class="py-name" href="#" onclick="return doclink('link-71', 'row_sum_row_sum', 'link-71');">row_sum_row_sum</a></tt><tt class="py-op">=</tt><tt class="py-name">row_sum_row_sum_pointwise_product</tt><tt class="py-op">,</tt>  </tt>
<a name="L178"></a><tt class="py-lineno">178</tt>  <tt class="py-line">                 <tt id="link-72" class="py-name" targets="Variable code.innerproduct.similaritydrawer.SimilarityDrawer.col_sum_col_sum=code.innerproduct.similaritydrawer.SimilarityDrawer-class.html#col_sum_col_sum"><a title="code.innerproduct.similaritydrawer.SimilarityDrawer.col_sum_col_sum" class="py-name" href="#" onclick="return doclink('link-72', 'col_sum_col_sum', 'link-72');">col_sum_col_sum</a></tt><tt class="py-op">=</tt><tt class="py-name">col_sum_col_sum_pointwise_product</tt><tt class="py-op">)</tt> </tt>
</div><a name="L179"></a><tt class="py-lineno">179</tt>  <tt class="py-line"> </tt>
<a name="L180"></a><tt class="py-lineno">180</tt>  <tt class="py-line">     </tt>
<a name="PointwiseProduct.analyze"></a><div id="PointwiseProduct.analyze-def"><a name="L181"></a><tt class="py-lineno">181</tt> <a class="py-toggle" href="#" id="PointwiseProduct.analyze-toggle" onclick="return toggle('PointwiseProduct.analyze');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="code.innerproduct.pointwiseproduct.PointwiseProduct-class.html#analyze">analyze</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">index1</tt><tt class="py-op">,</tt> <tt class="py-param">index2</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="PointwiseProduct.analyze-collapsed" style="display:none;" pad="+++" indent="++++++++"></div><div id="PointwiseProduct.analyze-expanded"><a name="L182"></a><tt class="py-lineno">182</tt>  <tt class="py-line">        <tt class="py-docstring">'''Shows a graphical analysis of 2 time streams in self.data. The</tt> </tt>
<a name="L183"></a><tt class="py-lineno">183</tt>  <tt class="py-line"><tt class="py-docstring">        timestream to be shown is specified with index1 and index2. This</tt> </tt>
<a name="L184"></a><tt class="py-lineno">184</tt>  <tt class="py-line"><tt class="py-docstring">        function shows a graph of the timestreams and shows their</tt> </tt>
<a name="L185"></a><tt class="py-lineno">185</tt>  <tt class="py-line"><tt class="py-docstring">        normalized pointwise product.</tt> </tt>
<a name="L186"></a><tt class="py-lineno">186</tt>  <tt class="py-line"><tt class="py-docstring">        @type index1: numpy array/list/tuple, shape:(2)</tt> </tt>
<a name="L187"></a><tt class="py-lineno">187</tt>  <tt class="py-line"><tt class="py-docstring">        @type index2: numpy array/list/tuple, shape:(2)'''</tt> </tt>
<a name="L188"></a><tt class="py-lineno">188</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt id="link-73" class="py-name" targets="Variable code.ellipsesdrawer.prettythingsdrawer.fig.figure=code.ellipsesdrawer.prettythingsdrawer.fig-class.html#figure"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.figure" class="py-name" href="#" onclick="return doclink('link-73', 'figure', 'link-73');">figure</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L189"></a><tt class="py-lineno">189</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt id="link-74" class="py-name" targets="Variable code.ellipsesdrawer.prettythingsdrawer.fig.title=code.ellipsesdrawer.prettythingsdrawer.fig-class.html#title"><a title="code.ellipsesdrawer.prettythingsdrawer.fig.title" class="py-name" href="#" onclick="return doclink('link-74', 'title', 'link-74');">title</a></tt><tt class="py-op">(</tt><tt class="py-string">'Timestream of Col '</tt> <tt class="py-op">+</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">index1</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-string">' Row '</tt> <tt class="py-op">+</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">index1</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt>  </tt>
<a name="L190"></a><tt class="py-lineno">190</tt>  <tt class="py-line">                  <tt class="py-op">+</tt> <tt class="py-string">' and Col '</tt> <tt class="py-op">+</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">index2</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-string">' Row '</tt> <tt class="py-op">+</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">index2</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L191"></a><tt class="py-lineno">191</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">xlabel</tt><tt class="py-op">(</tt><tt class="py-string">'Time (Data Point Taken at 399 Hz)'</tt><tt class="py-op">)</tt> </tt>
<a name="L192"></a><tt class="py-lineno">192</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">ylabel</tt><tt class="py-op">(</tt><tt class="py-string">'Normalized Power'</tt><tt class="py-op">)</tt> </tt>
<a name="L193"></a><tt class="py-lineno">193</tt>  <tt class="py-line">        <tt class="py-name">data1_mean</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">mean</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-75" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-75', 'data', 'link-10');">data</a></tt><tt class="py-op">[</tt><tt class="py-name">index1</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">index1</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L194"></a><tt class="py-lineno">194</tt>  <tt class="py-line">        <tt class="py-name">data2_mean</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">mean</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-76" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-76', 'data', 'link-10');">data</a></tt><tt class="py-op">[</tt><tt class="py-name">index2</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">index2</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L195"></a><tt class="py-lineno">195</tt>  <tt class="py-line">        <tt class="py-name">data1</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-77" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-77', 'data', 'link-10');">data</a></tt><tt class="py-op">[</tt><tt class="py-name">index1</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">index1</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">-</tt><tt class="py-name">data1_mean</tt> </tt>
<a name="L196"></a><tt class="py-lineno">196</tt>  <tt class="py-line">        <tt class="py-name">data2</tt><tt class="py-op">=</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-78" class="py-name"><a title="code.common_mode.common_plotter.CommonPlotter.data
code.common_mode.script.data
code.dipanalyzer.dipanalyzer.DipAnalyzer.data
code.innerproduct.pointwiseproduct.PointwiseProduct.data
code.outanalyzer.script.data
code.powerspectrum.script.data
code.powerspectrum.spectrumanalyzer.SpectrumAnalyzer.data
code.stepdetector.stepanalyzer.StepAnalyzer.data" class="py-name" href="#" onclick="return doclink('link-78', 'data', 'link-10');">data</a></tt><tt class="py-op">[</tt><tt class="py-name">index2</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-name">index2</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">-</tt><tt class="py-name">data2_mean</tt> </tt>
<a name="L197"></a><tt class="py-lineno">197</tt>  <tt class="py-line">        <tt class="py-name">square_integral1_sqrt</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sqrt</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-name">data1</tt><tt class="py-op">*</tt><tt class="py-name">data1</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L198"></a><tt class="py-lineno">198</tt>  <tt class="py-line">        <tt class="py-name">square_integral2_sqrt</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sqrt</tt><tt class="py-op">(</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-name">data2</tt><tt class="py-op">*</tt><tt class="py-name">data2</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L199"></a><tt class="py-lineno">199</tt>  <tt class="py-line">        <tt class="py-name">data1</tt><tt class="py-op">=</tt><tt class="py-name">data1</tt><tt class="py-op">/</tt><tt class="py-name">square_integral1_sqrt</tt> </tt>
<a name="L200"></a><tt class="py-lineno">200</tt>  <tt class="py-line">        <tt class="py-name">data2</tt><tt class="py-op">=</tt><tt class="py-name">data2</tt><tt class="py-op">/</tt><tt class="py-name">square_integral2_sqrt</tt> </tt>
<a name="L201"></a><tt class="py-lineno">201</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">plot</tt><tt class="py-op">(</tt><tt class="py-name">data1</tt><tt class="py-op">)</tt> </tt>
<a name="L202"></a><tt class="py-lineno">202</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">plot</tt><tt class="py-op">(</tt><tt class="py-name">data2</tt><tt class="py-op">)</tt> </tt>
<a name="L203"></a><tt class="py-lineno">203</tt>  <tt class="py-line">        <tt class="py-comment">#plt.plot(find_base(data2))</tt> </tt>
<a name="L204"></a><tt class="py-lineno">204</tt>  <tt class="py-line">        <tt class="py-name">pointwise_product</tt><tt class="py-op">=</tt><tt class="py-name">np</tt><tt class="py-op">.</tt><tt class="py-name">sum</tt><tt class="py-op">(</tt><tt class="py-name">data1</tt><tt class="py-op">*</tt><tt class="py-name">data2</tt><tt class="py-op">)</tt> </tt>
<a name="L205"></a><tt class="py-lineno">205</tt>  <tt class="py-line">        <tt class="py-name">plt</tt><tt class="py-op">.</tt><tt class="py-name">figtext</tt><tt class="py-op">(</tt><tt class="py-number">0.39</tt><tt class="py-op">,</tt> <tt class="py-number">0.85</tt><tt class="py-op">,</tt> <tt class="py-string">'Normalized Pointwise Product: '</tt>  </tt>
<a name="L206"></a><tt class="py-lineno">206</tt>  <tt class="py-line">                    <tt class="py-op">+</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">pointwise_product</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L207"></a><tt class="py-lineno">207</tt>  <tt class="py-line">        <tt class="py-keyword">print</tt> <tt class="py-name">pointwise_product</tt> </tt>
</div></div><a name="L208"></a><tt class="py-lineno">208</tt>  <tt class="py-line"> </tt>
<a name="L209"></a><tt class="py-lineno">209</tt>  <tt class="py-line"> </tt>
<a name="L210"></a><tt class="py-lineno">210</tt>  <tt class="py-line"><tt class="py-comment">#end of class</tt> </tt>
<a name="L211"></a><tt class="py-lineno">211</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="code-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            >All</th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Sun Nov  6 16:28:35 2011
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
